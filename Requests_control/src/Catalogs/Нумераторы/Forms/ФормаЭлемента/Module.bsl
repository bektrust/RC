
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.ФорматНомера) Тогда 
		Объект.ФорматНомера = НСтр("ru = '[Номер]'");
	КонецЕсли;
	
	Элементы.СледующийНомер.Видимость = Истина;
	Если СледующийНомер > 1 Тогда 
		Элементы.СледующийНомер.Заголовок = НСтр("ru = 'Следующий'");
		Элементы.СледующийНомер.Подсказка = НСтр("ru = 'Следующий номер'");
	КонецЕсли;
	
	Если Параметры.Свойство("ВидОбращения") И ЗначениеЗаполнено(Параметры.ВидОбращения) Тогда 
		ВидОбращения = Параметры.ВидОбращения;
	КонецЕсли;
	
	Элементы.ИндексВидаОбращения.Видимость = ПолучитьФункциональнуюОпцию("УчитыватьВидыОбращений");
	
	СледующийНомер = ОпределитьТекущийНомер();
	СледующийНомерПриОткрытии = СледующийНомер;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если СледующийНомерПриОткрытии <> СледующийНомер Тогда 
		МенеджерЗаписи = РегистрыСведений.Нумерация.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ВидОбращения = ВидОбращения;
		МенеджерЗаписи.ПериодНумерации = НачалоГода(ТекущаяДата());
		МенеджерЗаписи.Прочитать();
		
		Если МенеджерЗаписи.ТекущийНомер <> СледующийНомер-1 Тогда 
			МенеджерЗаписи.ВидОбращения = ВидОбращения;
			МенеджерЗаписи.ПериодНумерации = НачалоГода(ТекущаяДата());
			МенеджерЗаписи.ТекущийНомер = СледующийНомер-1;
			МенеджерЗаписи.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СледующийНомерПриОткрытии = СледующийНомер;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФорматНомераПриИзменении(Элемент)
	
	СформироватьПримерНомера();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДеньМесяца(Команда)
	
	Объект.ФорматНомера = Объект.ФорматНомера + "[День]";
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерМесяца(Команда)
	
	Объект.ФорматНомера = Объект.ФорматНомера + "[Месяц]";
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерКвартала(Команда)
	
	Объект.ФорматНомера = Объект.ФорматНомера + "[Квартал]";
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура Год2(Команда)
	
	Объект.ФорматНомера = Объект.ФорматНомера + "[Год2]";
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура Год4(Команда)
	
	Объект.ФорматНомера = Объект.ФорматНомера + "[Год4]";
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура ИндексОтветственного(Команда)
	
	Объект.ФорматНомера = Объект.ФорматНомера + "[ИндексОтв]";
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура ИндексВидаОбращения(Команда)
	
	Объект.ФорматНомера = Объект.ФорматНомера + "[ИндексВида]";
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерДокументаОснования(Команда)
	
	Объект.ФорматНомера = Объект.ФорматНомера + "[НомерДокОсн]";
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура Номер(Команда)
	
	Объект.ФорматНомера = Объект.ФорматНомера + "[Номер]";
	СформироватьПримерНомера();
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ФорматНомера", СокрЛП(Объект.ФорматНомера));
	ПараметрыЗакрытия.Вставить("ПримерНомера", СокрЛП(Объект.Пример));
	ПараметрыЗакрытия.Вставить("СледующийНомер", СледующийНомер);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьПримерНомера()
	
	ОписаниеОшибки = "";
	Если Не Нумерация.СформироватьПримерНомера(Объект.ФорматНомера, Объект.Пример, ОписаниеОшибки) Тогда 
		Объект.Пример = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка в формате номера: %1'"), ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьТекущийНомер()
	
	СтруктураИзмерений = Новый Структура;
	СтруктураИзмерений.Вставить("ПериодНумерации", 	  Нумерация.НачалоПериодаНумерации(ТекущаяДатаСеанса()));
	СтруктураИзмерений.Вставить("СвязанныйДокумент", Справочники.Обращения.ПустаяСсылка());
	СтруктураИзмерений.Вставить("ВидОбращения", 	  ВидОбращения);
	
	ТекущийНомер = РегистрыСведений.Нумерация.Получить(СтруктураИзмерений).ТекущийНомер + 1; 
	
	Возврат ТекущийНомер;
	
КонецФункции

#КонецОбласти
