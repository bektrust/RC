#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Автор");
	Поля.Добавить("Дата");
	Поля.Добавить("Кому");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = Описание(Данные.Автор, Данные.Кому, Данные.Дата);
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" И Параметры.Свойство("Ключ") Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ПросмотрСообщения";
		Если ЗначениеЗаполнено(Параметры.Ключ) Тогда
			РеквизитыСообщения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Ключ, "Автор, Предмет");
			Если Не ЗначениеЗаполнено(РеквизитыСообщения.Автор) И ЗначениеЗаполнено(РеквизитыСообщения.Предмет) Тогда
				ИмяТаблицы = ОбщегоНазначения.ИмяТаблицыПоСсылке(РеквизитыСообщения.Предмет);
				ВыбраннаяФорма = ИмяТаблицы + ".ФормаОбъекта";
				Параметры.Ключ = РеквизитыСообщения.Предмет;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Создает новое сообщение.
//
// Параметры:
//  Автор - СправочникСсылка.Пользователи - Автор сообщения.
//  Кому - СправочникСсылка.Пользователи - Адресат сообщения.
//  Текст - Строка - Текст сообщения.
//  Предмет - СправочникСсылка.ДоговорныеДокументы - Предмет сообщения.
//
Процедура Добавить(Автор, Кому, Текст, Предмет) Экспорт
	
	КлючеваяОперация = "СообщенияДобавлениеПрограммное";
	ВремяНачала = ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	
	Сообщение = Справочники.Сообщения.СоздатьЭлемент();
	Сообщение.Автор = Автор;
	Сообщение.Кому = Кому;
	Сообщение.Текст = Текст;
	Сообщение.Предмет = Предмет;
	Сообщение.Дата = ТекущаяДата();
	
	Сообщение.Записать();
	
	РаботаССообщениями.ЗапуститьРассылкуСообщений();
	
	ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(КлючеваяОперация, ВремяНачала);
	
КонецПроцедуры

// Устанавливает пометку удаления всем сообщениям с указанным предметом.
//
// Параметры:
//  Предмет - СправочникСсылка.ДоговорныеДокументы - Предмет сообщений.
//
Процедура ПометитьНаУдалениеПоПредмету(Предмет) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
		
		ЗаписьУжеЕстьВБазе = Ложь;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.Сообщения");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Предмет", Предмет);
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Сообщения.Ссылка
			|ИЗ
			|	Справочник.Сообщения КАК Сообщения
			|ГДЕ
			|	Сообщения.Предмет = &Предмет
			|	И Сообщения.ПометкаУдаления = ЛОЖЬ";
		
		Запрос.УстановитьПараметр("Предмет", Предмет);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			СообщениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
			СообщениеОбъект.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Формирует описание сообщения.
Функция Описание(Автор, Кому, Дата) Экспорт
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Описание = ?(Автор = ТекущийПользователь,
		ОписаниеККому(Кому, Дата),
		ОписаниеОтКого(Автор, Дата));
	
	Возврат Описание;
	
КонецФункции

// Формирует описание в виде от кого направлено сообщение.
Функция ОписаниеОтКого(Автор, Дата) Экспорт
	
	ОписаниеОтКого = СтрШаблон(
		НСтр("ru = 'Сообщение от %1, %2'"),
		ПредставлениеАвтор(Автор),
		ПредставлениеДата(Дата));
	
	Возврат ОписаниеОтКого;
	
КонецФункции

// Формирует описание в виде к кому направлено сообщение.
Функция ОписаниеККому(Кому, Дата) Экспорт
	
	ОписаниеККому = СтрШаблон(
		НСтр("ru = 'Сообщение к %1, %2'"),
		Кому,
		ПредставлениеДата(Дата));
	
	Возврат ОписаниеККому;
	
КонецФункции

// Возвращает представление автора сообщения.
Функция ПредставлениеАвтор(Автор) Экспорт
	
	Если ЗначениеЗаполнено(Автор) Тогда
		ПредставлениеАвтор = Строка(Автор);
	Иначе
		ПредставлениеАвтор = РаботаССообщениями.ИмяУчетнойЗаписиДляРассылкиСообщений();
	КонецЕсли;
	
	Возврат ПредставлениеАвтор;
	
КонецФункции

// Возвращает представление даты сообщения.
Функция ПредставлениеДата(Дата) Экспорт
	
	ПредставлениеДата = Формат(Дата, "ДФ='dd.MM.yyyy ЧЧ:мм'");
	
	Возврат ПредставлениеДата;
	
КонецФункции

#КонецОбласти

#КонецЕсли