#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует текст просмотра сообщения.
Функция ТекстПросмотра() Экспорт
	
	ТекстПросмотра = Текст;
	
	// Заменяем переносы строк.
	ТекстПросмотра = СтрЗаменить(Текст, Символы.ПС, "<br>");
	
	// Выделяем ссылки.
	ПараметрыВыделенияСсылок = РаботаС_HTML.ПараметрыВыделенияСсылок();
	ПараметрыВыделенияСсылок.ПолучатьПредставление = Истина;
	ПараметрыВыделенияСсылок.КодироватьНавигационныеСсылки = Истина;
	РаботаС_HTML.ДобавитьТегиКСсылкам(ТекстПросмотра, ПараметрыВыделенияСсылок);
	
	// Формируем HTML.
	ТекстПросмотра = СтрШаблон("<html>
		|<head>
		|<style type=""text/css"">
		|	body {
		|		overflow:    auto;
		|		margin-top:  10px;
		|		margin-left: 10px;
		|		font-family: Arial, sans-serif;
		|		font-size:   10pt;}
		| 	a:link {
		|		color: #006699; text-decoration: none;}
		|	a:visited {
		|		color: #006699; text-decoration: none;}
		|	a:hover {
		|		color: #006699; text-decoration: underline;}
		|	p {
		|		margin-top: 7px;}
		|</style>
		|<body>%1</body></html>", ТекстПросмотра);
	
	Возврат ТекстПросмотра;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		Инициализировать();
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Обращения") Тогда
		
		// Предмет
		Предмет = ДанныеЗаполнения;
		
		// Кому
		Обращения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеЗаполнения);
		АдресатСообщенияПоОбращениям = АдресатСообщенияПоОбращениям(Обращения);
		Если ЗначениеЗаполнено(АдресатСообщенияПоОбращениям) Тогда
			Кому = АдресатСообщенияПоОбращениям;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Массив") Тогда
		
		// Определяем обращения, на основании которых создается сообщение.
		Обращения = Новый Массив;
		Для Каждого ЭлементДанныхЗаполнения Из ДанныеЗаполнения Цикл
			Если ТипЗнч(ЭлементДанныхЗаполнения) = Тип("СправочникСсылка.Обращения") Тогда
				Обращения.Добавить(ЭлементДанныхЗаполнения);
			КонецЕсли;
		КонецЦикла;
		
		// Текст
		МассивДобавляемыйТекст = Новый Массив;
		Если Обращения.Количество() > 0 Тогда
			МассивДобавляемыйТекст.Добавить(НСтр("ru = 'Обращения'") + ":");
			Для Каждого Обращение Из Обращения Цикл
				МассивДобавляемыйТекст.Добавить("- " + ПолучитьНавигационнуюСсылку(Обращение));
			КонецЦикла;
		КонецЕсли;
		Если МассивДобавляемыйТекст.Количество() > 0 Тогда
			ДобавляемыйТекст = СтрСоединить(МассивДобавляемыйТекст, Символы.ПС);
			Текст = Текст + Символы.ПС + Символы.ПС + ДобавляемыйТекст;
		КонецЕсли;
		
		// Кому
		АдресатСообщенияПоОбращениям = АдресатСообщенияПоОбращениям(Обращения);
		Если ЗначениеЗаполнено(АдресатСообщенияПоОбращениям) Тогда
			Кому = АдресатСообщенияПоОбращениям;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Текст) Тогда
		Наименование = Текст;
	ИначеЕсли ЗначениеЗаполнено(Предмет) Тогда
		Наименование = Предмет;
	Иначе
		Наименование = НСтр("ru = 'Сообщение'");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Инициализировать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Определяет адресата сообщения по обращениям.
Функция АдресатСообщенияПоОбращениям(Обращения)
	
	АдресатСообщенияПоОбращениям = Неопределено;
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	ОтветственныеОбращений = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Обращения, "Ответственный");
	Для Каждого Обращение Из Обращения Цикл
		
		АдресатОбращения = Неопределено;
		ОтветственныйОбращения = ОтветственныеОбращений[Обращение];
		Если ОтветственныйОбращения <> ТекущийПользователь Тогда
			АдресатОбращения = ОтветственныйОбращения;
		КонецЕсли;
		
		Если АдресатСообщенияПоОбращениям = Неопределено Тогда
			// Еще не определили адресата - будем считать адресатом первого подходящего.
			АдресатСообщенияПоОбращениям = АдресатОбращения;
			
		ИначеЕсли АдресатСообщенияПоОбращениям <> АдресатОбращения Тогда
			// У разных обращений различаются адресаты - будем считать что нет адресата.
			АдресатСообщенияПоОбращениям = Неопределено;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат АдресатСообщенияПоОбращениям;
	
КонецФункции

// Выполняет инциализиацию.
//
Функция Инициализировать()
	
	Дата = ТекущаяДата();
	Автор = ПользователиКлиентСервер.ТекущийПользователь();
	ДатаОтправкиПоПочте = Неопределено;
	
КонецФункции

#КонецОбласти

#КонецЕсли