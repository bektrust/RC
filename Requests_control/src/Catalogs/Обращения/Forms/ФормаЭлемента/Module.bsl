#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьКодВопроса();
	Элементы.ГруппаОрганИСопроводительныйДокумент.Видимость = Ложь;
	Элементы.ДатаОтвета.Видимость = Ложь;
	Элементы.ГруппаМнениеАвтора.Видимость = Ложь;
	Элементы.ГруппаФайлВсеПоля.Видимость = Ложь;
	
	Если РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.НаправленоВИнойОрган") Тогда 
		Элементы.ГруппаОрганИСопроводительныйДокумент.Видимость = Истина;
		Элементы.ГруппаФайлВсеПоля.Видимость = Истина;
		Если Не ЗначениеЗаполнено(ДатаОтвета) Тогда 
			ДатаОтвета = ТекущаяДата();
		КонецЕсли;
		
	ИначеЕсли РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.ВТомЧислеМерыПриняты")
		Или РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.НеПоддержано")
		Или РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.Поддержано")
		Или РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.Разъяснено") Тогда 
		Элементы.ДатаОтвета.Видимость = Истина;
		Элементы.ДатаОтвета.Заголовок = НСтр("ru = 'Дата ответа'");
		Элементы.ГруппаМнениеАвтора.Видимость = Истина;
		Элементы.ГруппаФайлВсеПоля.Видимость = Истина;
		
		Если Не ЗначениеЗаполнено(ДатаОтвета) Тогда 
			ДатаОтвета = ТекущаяДата();
		КонецЕсли;
	КонецЕсли;
	
	// Файлы заявителя
	ЗаполнитьСписокФайлов();
	
	// Помощник в виде быстрого выбора срока: 1, 5, 7, 15, 30 дней (календарных)
	СрокиРассмотрения = РаботаСОбращениями.ПолучитьСрокиРассмотренияОбращений();
	Для Каждого Срок Из СрокиРассмотрения Цикл 
		Элементы.СрокРассмотрения.СписокВыбора.Добавить(Срок.Значение, Срок.Представление);
	КонецЦикла;
	Элементы.СрокРассмотрения.СписокВыбора.Добавить(НСтр("ru = 'Выбрать дату'"));
	
	Нумератор = Нумерация.ПолучитьНумераторДокумента(Объект);
	Если ЗначениеЗаполнено(Нумератор) Тогда
			Элементы.ПрисвоитьНомер.Видимость = Истина;
	Иначе	
		Элементы.ПрисвоитьНомер.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Заявитель) Тогда
		Заявитель = "";
	Иначе
		ЗаполнитьДанныеЗаявителя(Объект.Заявитель);
	КонецЕсли;
	
	УстановитьДоступностьФайлаОтвета();
	
	Если ЗначениеЗаполнено(Объект.Источник) Тогда 
		Если ЗначениеЗаполнено(Объект.ИсходящийНомер) Или ЗначениеЗаполнено(Объект.ДатаПоОбращению) Тогда 
			ПеренаправленоОт = СтрШаблон(НСтр("ru = '%1, №%2 от %3'"),
				Строка(Объект.Источник), СокрЛП(Объект.ИсходящийНомер), Формат(Объект.ДатаПоОбращению, "ДЛФ=D"));
		Иначе 
			ПеренаправленоОт = Строка(Объект.Источник);
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ТипОбращения = ПредопределенноеЗначение("Перечисление.ТипыОбращений.Персональное") Тогда 
		Элементы.ГруппаЗаявитель.Доступность = Истина;
		Элементы.АдресЭлектроннойПочты.Доступность = Истина;
		Элементы.КоличествоОбратившихся.Видимость = Ложь;
		Элементы.Заявитель.АвтоОтметкаНезаполненного = Истина;
		
	ИначеЕсли Объект.ТипОбращения = ПредопределенноеЗначение("Перечисление.ТипыОбращений.Коллективное") Тогда 
		Элементы.ГруппаЗаявитель.Доступность = Истина;
		Элементы.АдресЭлектроннойПочты.Доступность = Истина;
		Элементы.КоличествоОбратившихся.Видимость = Истина;
		Элементы.Заявитель.АвтоОтметкаНезаполненного = Истина;
		
	ИначеЕсли Объект.ТипОбращения = ПредопределенноеЗначение("Перечисление.ТипыОбращений.Анонимное") Тогда 
		Элементы.ГруппаЗаявитель.Доступность = Ложь;
		Элементы.АдресЭлектроннойПочты.Доступность = Ложь;
		Элементы.КоличествоОбратившихся.Видимость = Ложь;
		Элементы.Заявитель.АвтоОтметкаНезаполненного = Ложь;
		
	КонецЕсли;
	
	ПриложениеЯвляетсяВебКлиентом = ОбщегоНазначенияДокументооборот.ПриложениеЯвляетсяВебКлиентом();
	Если ПриложениеЯвляетсяВебКлиентом Тогда
		Элементы.Сканировать.Видимость = Ложь;
		Элементы.КонтекстноеМенюСканировать.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьСканирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИмпортФайловЗавершен" Тогда
		
		ЗаполнитьСписокФайлов();
		
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "ДанныеФайлаИзменены" Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Владелец")
			 И Параметр.Свойство("Файл") И ЗначениеЗаполнено(Параметр.Владелец)  Тогда
			ВладелецФайла = Параметр.Владелец;
			ФайлСсылка = Параметр.Файл; 
		Иначе	
			ВладелецФайла = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Источник, "ВладелецФайла");
			ФайлСсылка = Источник; 
		КонецЕсли;	
		
		Если ВладелецФайла = Объект.Ссылка Тогда
			ОбновитьСтрокуФайла(ФайлСсылка);
			
			ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
			УстановитьДоступностьКоманд(ТекущиеДанные);
			
		КонецЕсли;
		
 	КонецЕсли;
	
	Если ИмяСобытия = "ФайлИзменен" Тогда
		Если ТипЗнч(Параметр) = Тип("Структура") Тогда
			Если Параметр.Владелец = Объект.Ссылка Тогда 
				ОбновитьСтрокуФайла(Параметр.Файл);	
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "СозданФайл" Тогда
		
		Если Параметр <> Неопределено
		   И Параметр.Свойство("Владелец")
		   И Параметр.Владелец = Объект.Ссылка Тогда
			
			ЗаполнитьСписокФайлов();
			
			Если Параметр.Свойство("Файл") Тогда
				УстановитьТекущуюСтрокуФайла(Параметр.Файл);
			КонецЕсли;
			
			ОбновитьФайлЗаписи();
			УстановитьДоступностьФайлаОтвета();
			
			ОповеститьОбИзменении(Объект.Ссылка);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Заявитель"
		И Параметр = Заявитель Тогда
		Прочитать();
		ЗаполнитьДанныеЗаявителя(Заявитель);
	КонецЕсли;
	
	Если ИмяСобытия = "КомпонентаСканированияУстановлена" Тогда
		УстановитьДоступностьСканирования();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаФайлыЗанятыWordПередЗакрытием(РезультатВопроса, ПараметрыВыполнения) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеФормыОЗаполненииФайлов(Результат, ПараметрыВыполнения) Экспорт
	
	ПоказаноПредупреждениеОЗаполненииФайлов = Истина;
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НесколькоВопросов Тогда 
		Если (ЗначениеЗаполнено(Объект.ДатаДокумента) Или Регистрация)
			И Объект.Вопросы.Количество() = 0 Тогда 
			ТекстОшибки = НСтр("ru = 'Не введено ни одной строки в список ""Вопросы""'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
				"Объект.Вопросы",, Отказ);
		КонецЕсли;
		
		Для Каждого Строка Из Объект.Вопросы Цикл
			Если Строка.РезультатРассмотрения = Перечисления.РезультатыРассмотрения.НаправленоВИнойОрган 
				И Не ЗначениеЗаполнено(Строка.ОрганДляПередачи) Тогда 
				НомерСтроки = Объект.Вопросы.Индекс(Строка);
				ТекстОшибки = СтрШаблон(
					НСтр("ru = 'Для вопроса ""%1"" не указан ""Орган для передачи""'"), Строка.КодВопроса);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
					"Объект.Вопросы["+Формат(НомерСтроки, "ЧН=; ЧГ=")+"].ОрганДляПередачи",, Отказ);
				
			ИначеЕсли (Строка.РезультатРассмотрения = Перечисления.РезультатыРассмотрения.ВТомЧислеМерыПриняты
					Или Строка.РезультатРассмотрения = Перечисления.РезультатыРассмотрения.НеПоддержано
					Или Строка.РезультатРассмотрения = Перечисления.РезультатыРассмотрения.Поддержано
					Или Строка.РезультатРассмотрения = Перечисления.РезультатыРассмотрения.Разъяснено) 
				И Не ЗначениеЗаполнено(Строка.ДатаОтвета) Тогда 
				НомерСтроки = Объект.Вопросы.Индекс(Строка);
				ТекстОшибки = СтрШаблон(
					НСтр("ru = 'Для вопроса ""%1"" не указана ""Дата ответа""'"), Строка.КодВопроса);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
					"Объект.Вопросы["+Формат(НомерСтроки, "ЧН=; ЧГ=")+"].ДатаОтвета",, Отказ);
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Если (ЗначениеЗаполнено(Объект.ДатаДокумента) Или Регистрация)
			И Объект.Вопросы.Количество() = 0 Тогда 
			ТекстОшибки = НСтр("ru = 'Поле ""Классификация"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
				"КодВопроса",, Отказ);
		КонецЕсли;
		
		Если РезультатРассмотрения = Перечисления.РезультатыРассмотрения.НаправленоВИнойОрган 
			И Не ЗначениеЗаполнено(ОрганДляПередачи) Тогда 
			ТекстОшибки = СтрШаблон(
				НСтр("ru = 'Для вопроса ""%1"" не указан ""Орган для передачи""'"), КодВопроса);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
				"ОрганДляПередачиСтрока",, Отказ);
			
		ИначеЕсли (РезультатРассмотрения = Перечисления.РезультатыРассмотрения.ВТомЧислеМерыПриняты
				Или РезультатРассмотрения = Перечисления.РезультатыРассмотрения.НеПоддержано
				Или РезультатРассмотрения = Перечисления.РезультатыРассмотрения.Поддержано
				Или РезультатРассмотрения = Перечисления.РезультатыРассмотрения.Разъяснено) 
			И Не ЗначениеЗаполнено(ДатаОтвета) Тогда 
			ТекстОшибки = СтрШаблон(
				НСтр("ru = 'Для вопроса ""%1"" не указана ""Дата ответа""'"), КодВопроса);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
				"ДатаОтвета",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заявитель)
		И Не ЗначениеЗаполнено(ПочтовыйАдрес)
		И Не ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
		ТекстОшибки = НСтр("ru = 'Укажите почтовый адрес или адрес электронной почты'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
				"ПочтовыйАдрес",, Отказ);
	КонецЕсли;
	
	Если Объект.ТипОбращения <> Перечисления.ТипыОбращений.Анонимное Тогда 
		ПроверяемыеРеквизиты.Добавить("Заявитель");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресЭлектроннойПочты)
		И Не РаботаСоСтроками.ЭтоАдресЭлектроннойПочты(АдресЭлектроннойПочты) Тогда
		
		ТекстОшибки = НСтр("ru = 'Укажите корректный адрес электронной почты'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
				"АдресЭлектроннойПочты",, Отказ);
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьФайлЗаписи();
	УстановитьДоступностьФайлаОтвета();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("Регистрация") Тогда 
		
		ТекущийОбъект.ДатаДокумента = ТекущаяДата();
		Нумерация.СформироватьЧисловойНомерДокумента(ТекущийОбъект, ТекущийОбъект.ЧисловойНомер);
	
		ОписанияОшибок = Новый СписокЗначений;
		Нумерация.СформироватьСтроковыйНомерДокумента(ТекущийОбъект, ТекущийОбъект.НомерДокумента, ОписанияОшибок);
	
		Для Каждого ОписаниеОшибки Из ОписанияОшибок Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ОписаниеОшибки.Представление,,
				ОписаниеОшибки.Значение,
			"Объект");
		КонецЦикла;
		
	КонецЕсли;
	
	СоздатьОбновитьЗаявителя(Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПроходитАПК = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НавигационнаяСсылкаДокумента = ПолучитьНавигационнуюСсылку(ТекущийОбъект.Ссылка);
	ПредставлениеОбъекта = Строка(ТекущийОбъект.Ссылка);
	
	Регистрация = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	МассивЗахваченныхФайлов = ПолучитьМассивЗахваченныхФайлов();
	
	СписокЗанятыеWordФайлы = РаботаСОбращениямиКлиент.ПолучитьЗанятыеВнешнимиПрограммамиФайлы(Объект.Ссылка, УникальныйИдентификатор, 
		МассивЗахваченныхФайлов);
		
	НеОсвобождатьЗанятыеWordФайлы = Истина;
	РаботаСОбращениямиКлиент.ПоместитьИзмененияФайлов(Объект.Ссылка, УникальныйИдентификатор, 
		МассивЗахваченныхФайлов, НеОсвобождатьЗанятыеWordФайлы);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОбращенияПриИзменении(Элемент)
	
	ВидОбращенияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОбращенияПриИзменении(Элемент)
	
	Если Объект.ТипОбращения = ПредопределенноеЗначение("Перечисление.ТипыОбращений.Персональное") Тогда 
		Элементы.ГруппаЗаявитель.Доступность = Истина;
		Элементы.АдресЭлектроннойПочты.Доступность = Истина;
		Элементы.КоличествоОбратившихся.Видимость = Ложь;
		Элементы.Заявитель.АвтоОтметкаНезаполненного = Истина;
		
	ИначеЕсли Объект.ТипОбращения = ПредопределенноеЗначение("Перечисление.ТипыОбращений.Коллективное") Тогда 
		Элементы.ГруппаЗаявитель.Доступность = Истина;
		Элементы.АдресЭлектроннойПочты.Доступность = Истина;
		Элементы.КоличествоОбратившихся.Видимость = Истина;
		Элементы.Заявитель.АвтоОтметкаНезаполненного = Истина;
		
	ИначеЕсли Объект.ТипОбращения = ПредопределенноеЗначение("Перечисление.ТипыОбращений.Анонимное") Тогда 
		Элементы.ГруппаЗаявитель.Доступность = Ложь;
		Элементы.АдресЭлектроннойПочты.Доступность = Ложь;
		Элементы.КоличествоОбратившихся.Видимость = Ложь;
		Элементы.Заявитель.АвтоОтметкаНезаполненного = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатРассмотренияПриИзменении(Элемент)
	
	Элементы.ГруппаОрганИСопроводительныйДокумент.Видимость = Ложь;
	Элементы.ДатаОтвета.Видимость = Ложь;
	Элементы.ГруппаФайлВсеПоля.Видимость = Ложь;
	Элементы.ГруппаМнениеАвтора.Видимость = Ложь;
	
	Если РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.НаправленоВИнойОрган") Тогда 
		Элементы.ГруппаОрганИСопроводительныйДокумент.Видимость = Истина;
		Элементы.ГруппаФайлВсеПоля.Видимость = Истина;
		Если Не ЗначениеЗаполнено(ДатаОтвета) Тогда 
			ДатаОтвета = ТекущаяДата();
		КонецЕсли;
		
	ИначеЕсли РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.ВТомЧислеМерыПриняты")
		Или РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.НеПоддержано")
		Или РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.Поддержано")
		Или РезультатРассмотрения = ПредопределенноеЗначение("Перечисление.РезультатыРассмотрения.Разъяснено") Тогда 
		Элементы.ДатаОтвета.Видимость = Истина;
		Элементы.ДатаОтвета.Заголовок = НСтр("ru = 'Дата ответа'");
		Элементы.ГруппаФайлВсеПоля.Видимость = Истина;
		Элементы.ГруппаМнениеАвтора.Видимость = Истина;
		
		Если Не ЗначениеЗаполнено(ДатаОтвета) Тогда 
			ДатаОтвета = ТекущаяДата();
		КонецЕсли;
	КонецЕсли;
	
	ИзменилсяКодВопроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганДляПередачиПриИзменении(Элемент)
	
	ИзменилсяКодВопроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящаяДатаПриИзменении(Элемент)
	
	ИзменилсяКодВопроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходящийНомерПриИзменении(Элемент)
	
	ИзменилсяКодВопроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтветаПриИзменении(Элемент)
	
	ИзменилсяКодВопроса();
	
КонецПроцедуры

&НаКлиенте
Процедура МнениеАвтораОРезультатахПриИзменении(Элемент)
	
	ИзменилсяКодВопроса();
	
КонецПроцедуры

&НаКлиенте
Процедура МнениеАвтораОРезультатахНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Комментарий", МнениеАвтораОРезультатах);
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Мнение заявителя о результатах'"));
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводКомментарияМнениеАвтораОРезультатахЗавершение", ЭтотОбъект);
	РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ОткрытьФорму("ОбщаяФорма.ВводКомментария", ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкна);
	
КонецПроцедуры

&НаКлиенте
Процедура ВводКомментарияМнениеАвтораОРезультатахЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	МнениеАвтораОРезультатах = Результат;
	ИзменилсяКодВопроса();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МнениеАвтораОМерахПриИзменении(Элемент)
	
	ИзменилсяКодВопроса();
	
КонецПроцедуры

&НаКлиенте
Процедура МнениеАвтораОМерахНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Комментарий", МнениеАвтораОМерах);
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Мнение заявителя о мерах'"));
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводКомментарияМнениеАвтораОМерахЗавершение", ЭтотОбъект);
	РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ОткрытьФорму("ОбщаяФорма.ВводКомментария", ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкна);
	
КонецПроцедуры

&НаКлиенте
Процедура ВводКомментарияМнениеАвтораОМерахЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	МнениеАвтораОМерах = Результат;
	ИзменилсяКодВопроса();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СрокРассмотренияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Число") Тогда
		
		ДатаОтсчета = НачалоДня(Объект.ДатаДокумента);
		Если Не ЗначениеЗаполнено(ДатаОтсчета) Тогда
			ДатаОтсчета = НачалоДня(ТекущаяДата());
		КонецЕсли;	
		ДатаНовая = ДатаОтсчета + ВыбранноеЗначение * 86400; // ВыбранноеЗначение - дней, умножим на 86400, чтобы получить секунды
		Объект.СрокРассмотрения = ДатаНовая;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		ДатаНапоминания = НачалоДня(ТекущаяДата());
		Подсказка = "Введите дату";
		ЧастьДаты = ЧастиДаты.Дата;
		Оповещение = Новый ОписаниеОповещения("ПослеВводаДаты", ЭтотОбъект, Параметры);
		ПоказатьВводДаты(Оповещение, ДатаНапоминания, Подсказка, ЧастьДаты);

	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Дата") Тогда
		
		Объект.СрокРассмотрения = ВыбранноеЗначение;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДаты(Дата, Параметры) Экспорт
	
	Если НЕ Дата = Неопределено Тогда
		Объект.СрокРассмотрения = Дата;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Комментарий", Объект.Содержание);
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Содержание'"));
	ОписаниеОповещения = Новый ОписаниеОповещения("СодержаниеНачалоВыбораЗавершение", ЭтотОбъект);
	РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ОткрытьФорму("ОбщаяФорма.ВводКомментария", ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкна);

КонецПроцедуры

&НаКлиенте
Процедура СодержаниеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Содержание = Результат;
	Модифицированность = Истина;
	
КонецПроцедуры

// Работа с Заявителем

&НаКлиенте
Процедура ЗаявительПриИзменении(Элемент)
	
	ЗаполнитьДанныеЗаявителя(Заявитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительОчистка(Элемент, СтандартнаяОбработка)
	
	Заявитель = "";
	ПочтовыйАдрес = "";
	АдресЭлектроннойПочты = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	Если ТипЗнч(Заявитель) = Тип("Строка") Тогда
		ПараметрыФормы.Вставить("ТекстЗаполнения", Элемент.ТекстРедактирования);
	Иначе
		ПараметрыФормы.Вставить("ТекущаяСтрока", Заявитель);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Заявители.ФормаВыбора",
		ПараметрыФормы,
		Элементы.Заявитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПолучитьДанныеВыбораЗаявителя(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ПолучитьДанныеВыбораЗаявителя(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительОткрытие(Элемент, СтандартнаяОбработка)
	
	Если Не ТипЗнч(Заявитель) = Тип("СправочникСсылка.Заявители") Тогда
		СтандартнаяОбработка = Ложь;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаявительСозданиеПриОткрытииПродолжение", ЭтотОбъект),
			Нстр("ru = 'Требуется записать заявителя. Продолжить?'"), 
			РежимДиалогаВопрос.ДаНет, 
			,
			КодВозвратаДиалога.Нет,
			НСтр("ru = 'Внимание!'"));
	Иначе
		Если Модифицированность Тогда
			СтандартнаяОбработка = Ложь;
			
			ПоказатьВопрос(Новый ОписаниеОповещения("ЗаявительОткрытиеПродолжение", ЭтотОбъект),
				Нстр("ru = 'Требуется записать документ. Продолжить?'"),
				РежимДиалогаВопрос.ДаНет, 
				,
				КодВозвратаДиалога.Нет,
				НСтр("ru = 'Внимание!'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительСозданиеПриОткрытииПродолжение(Результат, ДополнительныеРеквизиты) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда		
		Заявитель = СоздатьЗаявителя(Заявитель, ПочтовыйАдрес, АдресЭлектроннойПочты);
		ПоказатьЗначение(, Заявитель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительОткрытиеПродолжение(Результат, ДополнительныеРеквизиты) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да И Записать() Тогда
		РазблокироватьДанныеФормыДляРедактирования();
		ПоказатьЗначение(, Заявитель);	
	КонецЕсли;
	
КонецПроцедуры

// Работа с кодом вопроса
&НаКлиенте
Процедура КодВопросаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Раздел", Раздел);
	ПараметрыФормы.Вставить("Тематика", Тематика);
	ПараметрыФормы.Вставить("Тема", Тема);
	ПараметрыФормы.Вставить("Вопрос", Вопрос);
	ПараметрыФормы.Вставить("КодВопроса", КодВопроса);
	ПараметрыФормы.Вставить("СокращенныйРежим", Истина);
	ПараметрыФормы.Вставить("КлючСохраненияПоложенияОкна", "ВыборОдногоВопроса");
	
	Обработчик = Новый ОписаниеОповещения("КодВопросаПослеВыбора", 
		ЭтотОбъект);
		
	ОткрытьФорму("ОбщаяФорма.ПомощникВыбораВопроса", ПараметрыФормы, , , , ,
		Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				
КонецПроцедуры

&НаКлиенте
Процедура КодВопросаПослеВыбора(Результат, Параметры) Экспорт 
	
	Если Результат <> Неопределено Тогда 
		Раздел = Результат.Раздел;
		Тематика = Результат.Тематика;
		Тема = Результат.Тема;
		Вопрос = Результат.Вопрос;
		КодВопроса = Результат.КодВопроса;
		
		ИзменилсяКодВопроса();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодВопросаОчистка(Элемент, СтандартнаяОбработка)
	
	Раздел = Неопределено;
	Тематика = Неопределено;
	Тема = Неопределено;
	Вопрос = Неопределено;
	КодВопроса = "";
	Объект.Вопросы.Очистить();
	Модифицированность = Истина;
	
КонецПроцедуры

// Работа с источником обращения

&НаКлиенте
Процедура ПеренаправленоОтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИсходящийНомерДокумента", Объект.ИсходящийНомер);
	ПараметрыФормы.Вставить("ОрганДляПередачи", Объект.Источник);
	ПараметрыФормы.Вставить("ИсходящаяДатаДокумента", Объект.ДатаПоОбращению);
	
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Перенаправлено от'"));
	ПараметрыФормы.Вставить("РежимПеренаправлено", Истина);
	
	Обработчик = Новый ОписаниеОповещения("ПеренаправленоОтПослеВыбора", 
		ЭтотОбъект);
	ОткрытьФорму("Справочник.Обращения.Форма.ФормаВыбораУчереждения", ПараметрыФормы,,,,,
		Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправленоОтПослеВыбора(Результат, Параметры) Экспорт 
	
	Если Результат <> Неопределено Тогда 
		Объект.ИсходящийНомер = Результат.ИсходящийНомерДокумента;
		Объект.Источник = Результат.ОрганДляПередачи;
		Объект.ДатаПоОбращению = Результат.ИсходящаяДатаДокумента;
		
		Если ЗначениеЗаполнено(Объект.Источник) Тогда 
			Если ЗначениеЗаполнено(Объект.ИсходящийНомер) Или ЗначениеЗаполнено(Объект.ДатаПоОбращению) Тогда 
				ПеренаправленоОт = СтрШаблон(НСтр("ru = '%1, №%2 от %3'"),
					Строка(Объект.Источник), СокрЛП(Объект.ИсходящийНомер), Формат(Объект.ДатаПоОбращению, "ДЛФ=D"));
			Иначе 
				ПеренаправленоОт = Строка(Объект.Источник);
			КонецЕсли;
		КонецЕсли;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправленоОтОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.ИсходящийНомер = Неопределено;
	Объект.Источник = Неопределено;
	Объект.ДатаПоОбращению = Неопределено;
	ПеренаправленоОт = "";
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВопросы

&НаКлиенте
Процедура ВопросыПриИзменении(Элемент)
	
	СформироватьЗаголовокКлассификатора();
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Если Копирование Тогда 
		ТекущиеДанные = Элементы.Вопросы.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Раздел", ТекущиеДанные.Раздел);
		ПараметрыФормы.Вставить("Тематика", ТекущиеДанные.Тематика);
		ПараметрыФормы.Вставить("Тема", ТекущиеДанные.Тема);
		ПараметрыФормы.Вставить("Вопрос", ТекущиеДанные.Вопрос);
		ПараметрыФормы.Вставить("КодВопроса", ТекущиеДанные.КодВопроса);
		
		ПараметрыФормы.Вставить("РезультатРассмотрения", ТекущиеДанные.РезультатРассмотрения);
		ПараметрыФормы.Вставить("ДатаОтвета", ТекущиеДанные.ДатаОтвета);
		ПараметрыФормы.Вставить("ОрганДляПередачи", ТекущиеДанные.ОрганДляПередачи);
		ПараметрыФормы.Вставить("ИсходящаяДатаДокумента", ТекущиеДанные.ИсходящаяДатаДокумента);
		ПараметрыФормы.Вставить("ИсходящийНомерДокумента", ТекущиеДанные.ИсходящийНомерДокумента);
		ПараметрыФормы.Вставить("МнениеАвтораОРезультатах", ТекущиеДанные.МнениеАвтораОРезультатах);
		ПараметрыФормы.Вставить("МнениеАвтораОМерах", ТекущиеДанные.МнениеАвтораОМерах);
		
		ПараметрыФормы.Вставить("КлючСохраненияПоложенияОкна", "ВыборНесколькихВопросов");	
		Обработчик = Новый ОписаниеОповещения("КодыВопросовПослеДобавления", 
			ЭтотОбъект, Новый Структура("ТекущиеДанные", ТекущиеДанные));
		
		ОткрытьФорму("Справочник.Обращения.Форма.ФормаВыбораИзКлассификатора", ПараметрыФормы,,,,,
			Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе 
		ОткрытьФорму(
			"ОбщаяФорма.ПомощникВыбораВопроса", , , , , ,
			Новый ОписаниеОповещения(
				"ВводНовойСтрокиПослеВыбораВопросаЗавершение", 
				ЭтотОбъект,
				Новый Структура("ТекущиеДанные", ТекущиеДанные)),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура КодыВопросовПослеДобавления(Результат, Параметры) Экспорт 
	
	Если Результат <> Неопределено Тогда 
		НоваяСтрока = Объект.Вопросы.Добавить();
		НоваяСтрока.Раздел = Результат.Раздел;
		НоваяСтрока.Тематика = Результат.Тематика;
		НоваяСтрока.Тема = Результат.Тема;
		НоваяСтрока.Вопрос = Результат.Вопрос;
		НоваяСтрока.КодВопроса = Результат.КодВопроса;
		
		НоваяСтрока.РезультатРассмотрения = Результат.РезультатРассмотрения;
		НоваяСтрока.ДатаОтвета = Результат.ДатаОтвета;
		НоваяСтрока.ОрганДляПередачи = Результат.ОрганДляПередачи;
		НоваяСтрока.ИсходящийНомерДокумента = Результат.ИсходящийНомерДокумента;
		НоваяСтрока.ИсходящаяДатаДокумента = Результат.ИсходящаяДатаДокумента;
		
		НоваяСтрока.МнениеАвтораОРезультатах = Результат.МнениеАвтораОРезультатах;
		НоваяСтрока.МнениеАвтораОМерах = Результат.МнениеАвтораОМерах;
		
		НоваяСтрока.ОрганДляПередачиСтрока = ПолучитьНаименованиеОрганаДляПередачи(НоваяСтрока.ОрганДляПередачи,
			НоваяСтрока.ИсходящийНомерДокумента, НоваяСтрока.ИсходящаяДатаДокумента);
		
		Модифицированность = Истина;
		Элементы.Вопросы.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		
		СформироватьЗаголовокКлассификатора();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ТекущиеДанные = Элементы.Вопросы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Раздел", ТекущиеДанные.Раздел);
	ПараметрыФормы.Вставить("Тематика", ТекущиеДанные.Тематика);
	ПараметрыФормы.Вставить("Тема", ТекущиеДанные.Тема);
	ПараметрыФормы.Вставить("Вопрос", ТекущиеДанные.Вопрос);
	ПараметрыФормы.Вставить("КодВопроса", ТекущиеДанные.КодВопроса);
	
	ПараметрыФормы.Вставить("РезультатРассмотрения", ТекущиеДанные.РезультатРассмотрения);
	ПараметрыФормы.Вставить("ДатаОтвета", ТекущиеДанные.ДатаОтвета);
	ПараметрыФормы.Вставить("ОрганДляПередачи", ТекущиеДанные.ОрганДляПередачи);
	ПараметрыФормы.Вставить("ИсходящаяДатаДокумента", ТекущиеДанные.ИсходящаяДатаДокумента);
	ПараметрыФормы.Вставить("ИсходящийНомерДокумента", ТекущиеДанные.ИсходящийНомерДокумента);
	ПараметрыФормы.Вставить("МнениеАвтораОРезультатах", ТекущиеДанные.МнениеАвтораОРезультатах);
	ПараметрыФормы.Вставить("МнениеАвтораОМерах", ТекущиеДанные.МнениеАвтораОМерах);
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Вопрос из тематического классификатора'"));
	ПараметрыФормы.Вставить("КлючСохраненияПоложенияОкна", "ВыборНесколькихВопросов");
	Обработчик = Новый ОписаниеОповещения("КодыВопросовПослеВыбора", 
		ЭтотОбъект, Новый Структура("ТекущиеДанные", ТекущиеДанные));
	ОткрытьФорму("Справочник.Обращения.Форма.ФормаВыбораИзКлассификатора", ПараметрыФормы,,,,,
		Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КодыВопросовРазделПриИзменении(Элемент)
	
	ОбновитьКодВопросаВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура КодыВопросовТематикаПриИзменении(Элемент)
	
	ОбновитьКодВопросаВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура КодыВопросовТемаПриИзменении(Элемент)
	
	ОбновитьКодВопросаВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура КодыВопросовВопросПриИзменении(Элемент)
	
	ОбновитьКодВопросаВТаблице();
	
КонецПроцедуры

&НаКлиенте
Процедура КодыВопросовКодВопросаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Вопросы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Раздел", ТекущиеДанные.Раздел);
	ПараметрыФормы.Вставить("Тематика", ТекущиеДанные.Тематика);
	ПараметрыФормы.Вставить("Тема", ТекущиеДанные.Тема);
	ПараметрыФормы.Вставить("Вопрос", ТекущиеДанные.Вопрос);
	ПараметрыФормы.Вставить("КодВопроса", ТекущиеДанные.КодВопроса);
	
	ПараметрыФормы.Вставить("РезультатРассмотрения", ТекущиеДанные.РезультатРассмотрения);
	ПараметрыФормы.Вставить("ДатаОтвета", ТекущиеДанные.ДатаОтвета);
	ПараметрыФормы.Вставить("ОрганДляПередачи", ТекущиеДанные.ОрганДляПередачи);
	ПараметрыФормы.Вставить("ИсходящаяДатаДокумента", ТекущиеДанные.ИсходящаяДатаДокумента);
	ПараметрыФормы.Вставить("ИсходящийНомерДокумента", ТекущиеДанные.ИсходящийНомерДокумента);
	ПараметрыФормы.Вставить("КлючСохраненияПоложенияОкна", "ВыборНесколькихВопросов");
	
	ПараметрыФормы.Вставить("МнениеАвтораОРезультатах", ТекущиеДанные.МнениеАвтораОРезультатах);
	ПараметрыФормы.Вставить("МнениеАвтораОМерах", ТекущиеДанные.МнениеАвтораОМерах);
	
	Обработчик = Новый ОписаниеОповещения("КодыВопросовПослеВыбора", 
		ЭтотОбъект, Новый Структура("ТекущиеДанные", ТекущиеДанные));
	ОткрытьФорму("Справочник.Обращения.Форма.ФормаВыбораИзКлассификатора", ПараметрыФормы,,,,,
		Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура КодыВопросовПослеВыбора(Результат, Параметры) Экспорт 
	
	Если Результат <> Неопределено Тогда 
		ТекущиеДанные = Параметры.ТекущиеДанные;
		ТекущиеДанные.Раздел = Результат.Раздел;
		ТекущиеДанные.Тематика = Результат.Тематика;
		ТекущиеДанные.Тема = Результат.Тема;
		ТекущиеДанные.Вопрос = Результат.Вопрос;
		ТекущиеДанные.КодВопроса = Результат.КодВопроса;
		
		ТекущиеДанные.РезультатРассмотрения = Результат.РезультатРассмотрения;
		ТекущиеДанные.ДатаОтвета = Результат.ДатаОтвета;
		ТекущиеДанные.ОрганДляПередачи = Результат.ОрганДляПередачи;
		ТекущиеДанные.ИсходящийНомерДокумента = Результат.ИсходящийНомерДокумента;
		ТекущиеДанные.ИсходящаяДатаДокумента = Результат.ИсходящаяДатаДокумента;
		ТекущиеДанные.ОрганДляПередачиСтрока = ПолучитьНаименованиеОрганаДляПередачи(ТекущиеДанные.ОрганДляПередачи,
			ТекущиеДанные.ИсходящийНомерДокумента, ТекущиеДанные.ИсходящаяДатаДокумента);
		ТекущиеДанные.МнениеАвтораОРезультатах = Результат.МнениеАвтораОРезультатах;
		ТекущиеДанные.МнениеАвтораОМерах = Результат.МнениеАвтораОМерах;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВводНовойСтрокиПослеВыбораВопросаЗавершение(Результат, Параметры) Экспорт 
		
	Если Не Результат = Неопределено Тогда 
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Раздел", Результат.Раздел);
		ПараметрыФормы.Вставить("Тематика", Результат.Тематика);
		ПараметрыФормы.Вставить("Тема", Результат.Тема);
		ПараметрыФормы.Вставить("Вопрос", Результат.Вопрос);
		ПараметрыФормы.Вставить("КодВопроса", Результат.КодВопроса);
		
		ПараметрыФормы.Вставить("РезультатРассмотрения", Неопределено);
		ПараметрыФормы.Вставить("ДатаОтвета", Неопределено);
		ПараметрыФормы.Вставить("ОрганДляПередачи", Неопределено);
		ПараметрыФормы.Вставить("ИсходящаяДатаДокумента", Неопределено);
		ПараметрыФормы.Вставить("ИсходящийНомерДокумента", Неопределено);
		ПараметрыФормы.Вставить("МнениеАвтораОРезультатах", Неопределено);
		ПараметрыФормы.Вставить("МнениеАвтораОМерах", Неопределено);
		
		ПараметрыФормы.Вставить("КлючСохраненияПоложенияОкна", "ВыборНесколькихВопросов");
		
		ОткрытьФорму(
			"Справочник.Обращения.Форма.ФормаВыбораИзКлассификатора",
			ПараметрыФормы, , , , ,
			Новый ОписаниеОповещения("КодыВопросовПослеДобавления", ЭтотОбъект, Параметры),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрисвоитьНомер(Команда)
	
	ОчиститьСообщения();
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Регистрация", Истина);
	Регистрация = Истина;
	
	Если Не Записать(ПараметрыЗаписи) Тогда 
		Если ЗначениеЗаполнено(Объект.ЧисловойНомер) Тогда
			// компенсация регистрации
			СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(Объект);
			Нумерация.ОсвободитьНомер(СтруктураПараметров);
		КонецЕсли;
		
		Регистрация = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НесколькоВопросов(Команда)
	
	НесколькоВопросов = Истина;
	УстановитьВидимостьКодов();
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВопросы;
	
КонецПроцедуры

&НаКлиенте
Процедура ОдинВопрос(Команда)
	
	Пока Объект.Вопросы.Количество() > 1 Цикл
		Объект.Вопросы.Удалить(1);
	КонецЦикла;
	
	Если Объект.Вопросы.Количество() > 0 Тогда
		Строка = Объект.Вопросы[0];
		Раздел = Строка.Раздел;
		Тематика = Строка.Тематика;
		Тема = Строка.Тема;
		Вопрос = Строка.Вопрос;
		КодВопроса = Строка.КодВопроса;
	КонецЕсли;
	
	НесколькоВопросов = Ложь;
	
	УстановитьВидимостьКодов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа с файлами

&НаКлиенте
Процедура ПросмотретьИзСписка(Команда)
	
	Если Элементы.ФайлыДобавленные.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(Элементы.ФайлыДобавленные.ТекущиеДанные.ПолныйПуть) Тогда 
		ФайлСсылка = ПолучитьИзВременногоХранилища(Элементы.ФайлыДобавленные.ТекущиеДанные.ПолныйПуть).Ссылка;
		ОткрытьФайл(ФайлСсылка);
	Иначе		
		РаботаСФайламиКлиент.ЗапуститьПриложениеПоИмениФайла(
			Элементы.ФайлыДобавленные.ТекущиеДанные.ПолныйПуть);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сканировать(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			"Создание:", 
			НавигационнаяСсылкаДокумента,
			ПредставлениеОбъекта,
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	НеОткрыватьКарточкуПослеСозданияИзФайла = Истина;
	РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект.Ссылка, УникальныйИдентификатор, НеОткрыватьКарточкуПослеСозданияИзФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзФайлаНаДиске(Команда)
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаИРабочийКаталог(ТекущиеДанные.Ссылка);
	
	РаботаСФайламиКлиент.ОбновитьИзФайлаНаДискеСОповещением(
		Неопределено,
		ДанныеФайла,
		УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура Напечатать(Команда)
	
	#Если ВебКлиент Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'В Веб-клиенте печать файлов не поддерживается.'"));
		Возврат;
	#КонецЕсли
	
	СистемнаяИнфо = Новый СистемнаяИнформация;
	Если СистемнаяИнфо.ТипПлатформы <> ТипПлатформы.Windows_x86 
	   И СистемнаяИнфо.ТипПлатформы <> ТипПлатформы.Windows_x86_64 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Печать файлов возможна только в Windows.'"));
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	ВыделенныеСтроки = Элементы.Файлы.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		МассивФайлов = Новый Массив;
		Для Каждого ВыбраннаяСтрока Из ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.Файлы.ДанныеСтроки(ВыбраннаяСтрока);	
			МассивФайлов.Добавить(ДанныеСтроки.Ссылка);
		КонецЦикла;
		
		Если МассивФайлов.Количество() > 0 Тогда
			
			ДанныеФайлов = РаботаСФайламиВызовСервера.ДанныеФайловДляОткрытия(
				МассивФайлов, 
				ЭтаФорма.УникальныйИдентификатор);
				
			КомандыРаботыСФайламиКлиент.НапечататьФайлы(ДанныеФайлов);
			
		КонецЕсли;
	Иначе
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;	
	
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(
			ТекущиеДанные.Ссылка, 
			Неопределено, 
			ЭтаФорма.УникальныйИдентификатор, 
			Неопределено, 
			ПредыдущийАдресФайла);
		
		КомандыРаботыСФайламиКлиент.НапечататьФайл(ДанныеФайла);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	ПараметрыДобавления = Новый Структура;
	
	ФайлыПередНачаломДобавленияКлиент(Элементы.Файлы, Истина, Ложь, Неопределено, Неопределено, ПараметрыДобавления);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКак(Команда)
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	ВыделенныеСтроки = Элементы.Файлы.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		СписокФайловДляВыгрузки = Новый СписокЗначений;
		Для Каждого ВыбраннаяСтрока Из ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.Файлы.ДанныеСтроки(ВыбраннаяСтрока);	
			СписокФайловДляВыгрузки.Добавить(ДанныеСтроки.Ссылка);
		КонецЦикла;
		
		Если СписокФайловДляВыгрузки.Количество() > 0 Тогда
			РаботаСФайламиКлиент.СохранитьФайлыКак(СписокФайловДляВыгрузки, УникальныйИдентификатор);
		КонецЕсли;
	Иначе
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляСохранения(ТекущиеДанные.Ссылка, Неопределено, ЭтаФорма.УникальныйИдентификатор);
		КомандыРаботыСФайламиКлиент.СохранитьКак(ДанныеФайла, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокФайлов(Команда)
	
	ЗаполнитьСписокФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленныеФайлы(Команда)
	
	ПоказыватьУдаленныеФайлы = Не ПоказыватьУдаленныеФайлы;
	
	ЗаполнитьСписокФайлов();
	Элементы.КонтекстноеМенюФайлыПоказыватьУдаленныеФайлы.Пометка = ПоказыватьУдаленныеФайлы;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереходКВопросам(Команда)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВопросы;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыФайлы

&НаКлиенте
Процедура ФайлыПриИзменении(Элемент)
	
	КоличествоФайлов = 0;
	КоличествоФайлов = Файлы.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Строка = Файлы.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если Строка = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ВыборФайла(Строка.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКоманд(Элементы.Файлы.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ПараметрыДобавления = Новый Структура;
	ФайлыПередНачаломДобавленияКлиент(Элемент, Отказ, Копирование, Родитель, Группа, ПараметрыДобавления);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередНачаломДобавленияКлиент(Элемент, Отказ, Копирование, Родитель, Группа, ПараметрыДобавления)
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	ВладелецФайла = Объект.Ссылка;
	
	Если Не Копирование Тогда
		Попытка
			РежимСоздания = 2;
			НеОткрыватьФормуВыбораРежимаСозданияФайла = Истина;
			РаботаСФайламиКлиент.ДобавитьФайл(Неопределено, ВладелецФайла, 
				ЭтаФорма, РежимСоздания, Истина, , , НеОткрыватьФормуВыбораРежимаСозданияФайла);
		Исключение
			ПоказатьПредупреждение(, ФайловыеФункцииСлужебныйКлиентСервер.ОшибкаСозданияНовогоФайла(
				ИнформацияОбОшибке()));
		КонецПопытки;
	Иначе
		ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;	
		ФайлОснование = ТекущиеДанные.Ссылка;
		
		РаботаСФайламиКлиент.СкопироватьФайл(ВладелецФайла, ФайлОснование);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	
	Отказ = Истина;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ФайлыПередУдалениемПродолжение",
		ЭтотОбъект,
		Новый Структура);
	РаботаСОбращениямиКлиент.ПометитьФайлыДокументаНаУдаление(ЭтаФорма, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередУдалениемПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		МассивФайлов = Параметры.МассивФайлов;
		ПометитьФайлыНаУдаление(МассивФайлов, Не Параметры.ПометкаУдаления);
		
		Если ПоказыватьУдаленныеФайлы Тогда 
			Для Каждого Файл Из МассивФайлов Цикл 
				ОбновитьСтрокуФайла(Файл);
			КонецЦикла;
		КонецЕсли;
		
		Оповестить("ФайлыДокументаПомеченыНаУдаление", Объект.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	ВыделенныеСтроки = Элементы.Файлы.ВыделенныеСтроки;
	МассивФайловДляПеретаскивания = Новый Массив;
	
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		Для Каждого ВыбраннаяСтрока Из ВыделенныеСтроки Цикл
			
			ДанныеСтроки = Элементы.Файлы.ДанныеСтроки(ВыбраннаяСтрока);
			МассивФайловДляПеретаскивания.Добавить(ДанныеСтроки.Ссылка);
		КонецЦикла;
		
	Иначе
		Если ТекущиеДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		
		МассивФайловДляПеретаскивания.Добавить(ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	ПараметрыПеретаскивания.Значение = МассивФайловДляПеретаскивания;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущийЭлемент = Элементы.Файлы;
	Если ТекущийЭлемент.ТолькоПросмотр Тогда 
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	ВладелецФайлаСписка = Объект.Ссылка;
	НеОткрыватьКарточкуПослеСозданияИзФайла = Истина;	
	РаботаСФайламиКлиент.ОбработкаПеретаскиванияВЛинейныйСписок(ПараметрыПеретаскивания, ВладелецФайлаСписка, ЭтаФорма, НеОткрыватьКарточкуПослеСозданияИзФайла);
	
	ЗаполнитьСписокФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайла(Файл)
	
	ПараметрыВыполнения = Новый Структура("Файл", Файл);
	
	Обработчик = Новый ОписаниеОповещения("ВыборФайлаПослеУстановкиРасширения", 
		ЭтотОбъект, ПараметрыВыполнения);
	ФайловыеФункцииСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Обработчик);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ВыборФайлаПослеУстановкиРасширения(РасширениеУстановлено, ПараметрыВыполнения) Экспорт
	
	Файл = ПараметрыВыполнения.Файл;
	
	ОбновитьИОткрытьФайл(Неопределено, Новый Структура("Файл", Файл));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаОЗанятыхФайлах(РезультатВопроса, ПараметрыВыполнения) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		ВыборФайла(ПараметрыВыполнения.Файл)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИОткрытьФайл(Результат, Параметры) Экспорт 
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(Параметры.Файл, 
		Неопределено, 
		ЭтаФорма.УникальныйИдентификатор, 
		Неопределено, 
		ПредыдущийАдресФайла);
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ДанныеФайла", ДанныеФайла);
	Обработчик = Новый ОписаниеОповещения("СписокВыборПослеВыбораРежимаРедактирования", ЭтотОбъект, ПараметрыОбработчика);
	
	РаботаСФайламиКлиент.ВыбратьРежимИРедактироватьФайл(Обработчик, ДанныеФайла, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборПослеВыбораРежимаРедактирования(Результат, ПараметрыВыполнения) Экспорт
	
	РезультатОткрыть = "Открыть";
	РезультатРедактировать = "Редактировать";
	РезультатОткрытьКарточку = "ОткрытьКарточку";
	
	Если Результат = РезультатРедактировать Тогда
		Обработчик = Новый ОписаниеОповещения("СписокВыборПослеРедактированияФайла", ЭтотОбъект, ПараметрыВыполнения);
		РаботаСФайламиКлиент.РедактироватьФайл(Обработчик, ПараметрыВыполнения.ДанныеФайла);
	ИначеЕсли Результат = РезультатОткрыть Тогда
		РаботаСФайламиКлиент.ОткрытьФайлСОповещением(Неопределено, ПараметрыВыполнения.ДанныеФайла, УникальныйИдентификатор); 
	ИначеЕсли Результат = РезультатОткрытьКарточку Тогда
		ПоказатьЗначение(, ПараметрыВыполнения.ДанныеФайла.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборПослеРедактированияФайла(Результат, ПараметрыВыполнения) Экспорт
	
	ОбновитьСтрокуФайла(ПараметрыВыполнения.ДанныеФайла.Ссылка);
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	УстановитьДоступностьКоманд(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВидОбращенияПриИзмененииНаСервере()
	
	НумераторДокумента = Нумерация.ПолучитьНумераторДокумента(Объект);
	Если ЗначениеЗаполнено(НумераторДокумента) Тогда
		Элементы.ПрисвоитьНомер.Видимость = Истина;
	Иначе
		// Ручная нумерация
		Элементы.ПрисвоитьНомер.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКодВопросаВТаблице()
	
	ТекущиеДанные = Элементы.Вопросы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.КодВопроса = РаботаСОбращениями.СформироватьКодВопроса(ТекущиеДанные.Раздел, ТекущиеДанные.Тематика,
		ТекущиеДанные.Тема, ТекущиеДанные.Вопрос);
	
КонецПроцедуры

&НаСервере
Процедура ИзменилсяКодВопроса()
	
	Если Не НесколькоВопросов Тогда 
		Объект.Вопросы.Очистить();
		НоваяСтрока = Объект.Вопросы.Добавить();
		НоваяСтрока.Раздел = Раздел;
		НоваяСтрока.Вопрос = Вопрос;
		НоваяСтрока.Тематика = Тематика;
		НоваяСтрока.Тема = Тема;
		НоваяСтрока.КодВопроса = КодВопроса;
		
		НоваяСтрока.ОрганДляПередачи = ОрганДляПередачи;
		НоваяСтрока.ИсходящаяДатаДокумента = ИсходящаяДатаДокумента;
		НоваяСтрока.ИсходящийНомерДокумента = ИсходящийНомерДокумента;
		НоваяСтрока.РезультатРассмотрения = РезультатРассмотрения;
		НоваяСтрока.МнениеАвтораОРезультатах = МнениеАвтораОРезультатах;
		НоваяСтрока.МнениеАвтораОМерах = МнениеАвтораОМерах;
		НоваяСтрока.ДатаОтвета = ДатаОтвета;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьКодВопроса()
	
	Для Каждого Строка Из Объект.Вопросы Цикл 
		Раздел = Строка.Раздел;
		Вопрос = Строка.Вопрос;
		Тематика = Строка.Тематика;
		Тема = Строка.Тема;
		ОрганДляПередачи = Строка.ОрганДляПередачи;
		РезультатРассмотрения = Строка.РезультатРассмотрения;
		ИсходящаяДатаДокумента = Строка.ИсходящаяДатаДокумента;
		ИсходящийНомерДокумента = Строка.ИсходящийНомерДокумента;
		ДатаОтвета = Строка.ДатаОтвета;
		КодВопроса = Строка.КодВопроса;
		МнениеАвтораОРезультатах = Строка.МнениеАвтораОРезультатах;
		МнениеАвтораОМерах = Строка.МнениеАвтораОМерах;
		
		Строка.ОрганДляПередачиСтрока = ПолучитьНаименованиеОрганаДляПередачи(ОрганДляПередачи,
			ИсходящийНомерДокумента, ИсходящаяДатаДокумента);
	КонецЦикла;
	
	НесколькоВопросов = Объект.Вопросы.Количество() > 1;
	УстановитьВидимостьКодов();
	
	ОрганДляПередачиСтрока = ПолучитьНаименованиеОрганаДляПередачи(ОрганДляПередачи,
		ИсходящийНомерДокумента, ИсходящаяДатаДокумента);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКодов()
	
	Если НесколькоВопросов Тогда 
		Элементы.ГруппаВопрос.Видимость = Ложь;
		Элементы.РезультатРассмотрения.Видимость = Ложь;
		Элементы.ГруппаРузультат.Видимость = Ложь;
		Элементы.ГруппаДекорацияКлассификатора.Видимость = Истина;
		Элементы.СтраницаВопросы.Видимость = Истина;
		Элементы.ГруппаМнениеАвтора.Видимость = Ложь;
		Элементы.ГруппаФайлВсеПоля.Видимость = Ложь;
		СформироватьЗаголовокКлассификатора();
	Иначе 
		Элементы.ГруппаВопрос.Видимость = Истина;
		Элементы.РезультатРассмотрения.Видимость = Истина;
		Элементы.ГруппаРузультат.Видимость = Истина;
		Элементы.ГруппаДекорацияКлассификатора.Видимость = Ложь;
		Элементы.ГруппаМнениеАвтора.Видимость = Истина;
		Элементы.ГруппаФайлВсеПоля.Видимость = Истина;
		Элементы.СтраницаВопросы.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаголовокКлассификатора()
	
	КоличествоВопросов = Объект.Вопросы.Количество();
	Подпись = НСтр("ru = 'вопросов'");
	
	Если КоличествоВопросов <= 20 Тогда
		
		Если КоличествоВопросов = 1 Тогда
			Подпись = НСтр("ru = 'вопрос'");
		ИначеЕсли КоличествоВопросов = 2 Или КоличествоВопросов = 3 Или КоличествоВопросов = 4 Тогда
			Подпись = НСтр("ru = 'вопроса'");
		Иначе
			Подпись = НСтр("ru = 'вопросов'");
		КонецЕсли;
		
	Иначе
		
		ПоследняяЦифра = КоличествоВопросов % 10;
		
		Если ПоследняяЦифра = 1 Тогда
			Подпись = НСтр("ru = 'вопрос'");
		ИначеЕсли ПоследняяЦифра = 2 Или ПоследняяЦифра = 3 Или ПоследняяЦифра = 4 Тогда
			Подпись = НСтр("ru = 'вопроса'");
		Иначе
			Подпись = НСтр("ru = 'вопросов'");
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ПереходКВопросам.Заголовок = СокрЛП(КоличествоВопросов) + " " + Подпись;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеЗаявителя(ТекущийЗаявитель)
	
	Если ТипЗнч(ТекущийЗаявитель) = Тип("СправочникСсылка.Заявители")
		И ЗначениеЗаполнено(ТекущийЗаявитель) Тогда 
		Заявитель = ТекущийЗаявитель;
		ДанныеЗаявителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущийЗаявитель,
			"АдресЭлектроннойПочты, ПочтовыйАдрес");
		ПочтовыйАдрес = ДанныеЗаявителя.ПочтовыйАдрес;
		АдресЭлектроннойПочты = ДанныеЗаявителя.АдресЭлектроннойПочты;
		Элементы.ПочтовыйАдрес.ТолькоПросмотр = Истина;
		Элементы.АдресЭлектроннойПочты.ТолькоПросмотр = Истина;
	Иначе 
		Заявитель = Справочники.Заявители.ПустаяСсылка();
		ПочтовыйАдрес = "";
		АдресЭлектроннойПочты = "";
		Элементы.ПочтовыйАдрес.ТолькоПросмотр = Ложь;
		Элементы.АдресЭлектроннойПочты.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа с файлами

&НаКлиенте
Функция ОбновитьФайлВДереве(Элемент, Контекст)
	
	ИдентификаторСтроки = Элемент.ПолучитьИдентификатор();
	ТекДанные = Контекст.Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ТекДанные.Файл = Контекст.Файл Тогда
		СтруктураДанных = РаботаСОбращениями.ПолучитьДанныеФайлаДляСписка(ТекДанные.Файл);
		ЗаполнитьЗначенияСвойств(ТекДанные, СтруктураДанных);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция МассивЗахваченныхФайловВДереве(Элемент, Контекст)
	
	ИдентификаторСтроки = Элемент.ПолучитьИдентификатор();
	ТекДанные = Контекст.Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ЗначениеЗаполнено(ТекДанные.Файл) И ТекДанные.РедактируетТекущийПользователь Тогда
		
		ДанныеФайла = Новый Структура("Ссылка, ПолноеИмяФайлаВРабочемКаталоге, РедактируетТекущийПользователь, ДатаМодификацииУниверсальнаяВБазе, Размер");
		ЗаполнитьЗначенияСвойств(ДанныеФайла, ТекДанные);
		
		ДанныеФайла.Ссылка = ТекДанные.Файл;
		
		Контекст.МассивЗахваченныхФайлов.Добавить(ДанныеФайла);
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПолучитьМассивЗахваченныхФайлов()
	
	МассивЗахваченныхФайлов = Новый Массив;
	РаботаСОбращениямиКлиент.ДобавитьЗанятыеФайлыСамойКарточки(ЭтаФорма, МассивЗахваченныхФайлов);
	Возврат МассивЗахваченныхФайлов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокФайлов()
	
	РаботаСОбращениями.ЗаполнитьСписокФайловДокумента(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПометитьФайлыНаУдаление(МассивФайлов, ЗначениеПометкиУдаления)
	
	РаботаСОбращениями.ПометитьФайлыНаУдаление(ЭтаФорма, МассивФайлов, 
		ЗначениеПометкиУдаления);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтрокуФайла(Файл)
	
	СтрокаИдентификатор = Неопределено;
	Для Каждого Строка Из Файлы Цикл
		Если Строка.Ссылка = Файл Тогда 
			СтрокаИдентификатор = Строка.ПолучитьИдентификатор();
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	
	Если СтрокаИдентификатор = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Элементы.Файлы.ТекущаяСтрока = СтрокаИдентификатор;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Файл)
	
	Если Не ЗначениеЗаполнено(Файл) Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(
		Файл, 
		Неопределено, 
		ЭтаФорма.УникальныйИдентификатор, 
		Неопределено, 
		ПредыдущийАдресФайла);
		
	КомандыРаботыСФайламиКлиент.Открыть(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлВыполнить()
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ВыборФайла(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтрокуФайла(Файл)
	
	РаботаСОбращениямиКлиент.ОбновитьСтрокуФайла(Файлы, Файл);
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьДоступностьКоманды(Команда, Доступность)
	
	Команда.Доступность = Доступность;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКоманды(Команда, Видимость)
	
	Команда.Видимость = Видимость;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКоманд(ТекущиеДанные)
	
	Если ТекущиеДанные = Неопределено
		Или ТипЗнч(Элементы["Файлы"].ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		Или ТолькоПросмотр Тогда
		
		УстановитьДоступностьКоманды(Элементы["ОткрытьФайл"], Ложь);
		УстановитьДоступностьКоманды(Элементы["КонтекстноеМенюФайлыОткрытьФайл"], Ложь);
		УстановитьДоступностьКоманды(Элементы["КонтекстноеМенюФайлыНапечатать"], Ложь);
		УстановитьДоступностьКоманды(Элементы["КонтекстноеМенюФайлыСохранитьКак"], Ложь);
		УстановитьДоступностьКоманды(Элементы["КонтекстноеМенюФайлыОбновитьИзФайлаНаДиске"], Ложь);
		
	Иначе
		
		РедактируетТекущийПользователь = ТекущиеДанные.РедактируетТекущийПользователь;
		Редактирует = ТекущиеДанные.Редактирует;
		РазрешеноРедактирование = Истина;
		РазрешеноУдаление = Истина;
		
		УстановитьДоступностьКоманды(Элементы["ОткрытьФайл"], Истина);
		УстановитьДоступностьКоманды(Элементы["КонтекстноеМенюФайлыОткрытьФайл"], Истина);
		УстановитьДоступностьКоманды(Элементы["КонтекстноеМенюФайлыНапечатать"], Истина);
		УстановитьДоступностьКоманды(Элементы["КонтекстноеМенюФайлыУдалить"], РазрешеноУдаление);
		УстановитьДоступностьКоманды(Элементы["КонтекстноеМенюФайлыСохранитьКак"], Истина);
		УстановитьДоступностьКоманды(Элементы["КонтекстноеМенюФайлыОбновитьИзФайлаНаДиске"], РазрешеноРедактирование);
		Расширение = ТекущиеДанные.Расширение;
		ИспользоватьImageMagickДляРаспознаванияPDF = ФайловыеФункцииКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами().ИспользоватьImageMagickДляРаспознаванияPDF;
		РасширениеПоддерживается = РаботаСФайламиКлиентСервер.ЭтотФайлМожноРаспознать(Расширение, ИспользоватьImageMagickДляРаспознаванияPDF);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьСканирования()
	
	ДоступнаКомандаСканировать = Истина;
	УстановитьВидимостьКоманды(Элементы.Сканировать, ДоступнаКомандаСканировать);
	УстановитьВидимостьКоманды(Элементы.КонтекстноеМенюСканировать, ДоступнаКомандаСканировать);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПолучитьДанныеВыбораЗаявителя(Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("Отбор", Новый Структура);
	ПараметрыВыбора.Вставить("СтрокаПоиска", Текст);
	
	ДанныеВыбора = Справочники.Заявители.ПолучитьДанныеВыбора(ПараметрыВыбора);
	
	ПредставлениеНового = Новый ФорматированнаяСтрока(
		Текст, 
		Новый ФорматированнаяСтрока(" (новый заявитель)", , WebЦвета.Серый));
	ДанныеВыбора.Вставить(0, Текст, ПредставлениеНового);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьОбновитьЗаявителя(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.ТипОбращения <> Перечисления.ТипыОбращений.Анонимное Тогда 
		Если ТипЗнч(Заявитель) = Тип("СправочникСсылка.Заявители") Тогда
			ЗаблокироватьДанныеДляРедактирования(Заявитель);
			ОбновляемыйЗаявитель = Заявитель.ПолучитьОбъект();
			ОбновляемыйЗаявитель.ПочтовыйАдрес = ПочтовыйАдрес;
			ОбновляемыйЗаявитель.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
			ОбновляемыйЗаявитель.Записать();
		Иначе
			Заявитель = СоздатьЗаявителя(Заявитель, ПочтовыйАдрес, АдресЭлектроннойПочты);
		КонецЕсли;
		
		ТекущийОбъект.Заявитель = Заявитель;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьНаименованиеОрганаДляПередачи(ОрганПередачи, ИсходящийНомер, ИсходящаяДата)
	
	Если ЗначениеЗаполнено(ОрганПередачи) Тогда 
		Если ЗначениеЗаполнено(ИсходящаяДата) Или ЗначениеЗаполнено(ИсходящийНомер) Тогда 
			ОрганСтрока = СтрШаблон(НСтр("ru = '%1, №%2 от %3'"),
				Строка(ОрганПередачи), СокрЛП(ИсходящийНомер), Формат(ИсходящаяДата, "ДЛФ=D"));
		Иначе 
			ОрганСтрока = Строка(ОрганПередачи);
		КонецЕсли;
	Иначе 
		ОрганСтрока = "";
	КонецЕсли;
	
	Возврат ОрганСтрока;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьФайлОтвета(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	ВладелецФайла = Объект.Ссылка;
	
	Попытка
		РежимСоздания = 2;
		НеОткрыватьФормуВыбораРежимаСозданияФайла = Истина;
		РаботаСФайламиКлиент.ДобавитьФайл(Неопределено, ВладелецФайла, 
			ЭтаФорма, РежимСоздания, Истина, , , НеОткрыватьФормуВыбораРежимаСозданияФайла,
			Истина); // Ответный
	Исключение
		ПоказатьПредупреждение(, ФайловыеФункцииСлужебныйКлиентСервер.ОшибкаСозданияНовогоФайла(
			ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФайлЗаписи()
	
	КоличествоФайловОтвета = 0;
	ФайлПрикрепленный = Справочники.Файлы.ПустаяСсылка();
	ФайлСРасширением = "";
	ФайлИндексКартинки = -1;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
	
	МассивФайлов = РаботаСФайламиВызовСервера.ПолучитьВсеПодчиненныеФайлы(
		Объект.Ссылка, 
		ПоказыватьУдаленныеФайлы,
		,
		Истина); // ТолькоОтветные
	
	Если МассивФайлов.Количество() > 0 Тогда
		ФайлПрикрепленный = МассивФайлов[0];
		КоличествоФайловОтвета = 1;
		РеквизитыПрикрепленногоФайла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ФайлПрикрепленный,
			"ИндексКартинки, Наименование, ТекущаяВерсияРасширение");
		
		ФайлИндексКартинки = РеквизитыПрикрепленногоФайла.ИндексКартинки;
		ФайлСРасширением =
			РеквизитыПрикрепленногоФайла.Наименование+ "."
			+ РеквизитыПрикрепленногоФайла.ТекущаяВерсияРасширение;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьФайлаОтвета()
	
	// Файлы
	Элементы.ГруппаФайл.Видимость = (КоличествоФайловОтвета > 0);
	Элементы.ДобавитьФайл.Видимость = (КоличествоФайловОтвета = 0);
	Элементы.УдалитьФайл.Доступность = (КоличествоФайловОтвета > 0);
	
	Элементы.ГруппаФайлНесколькоВопросов.Видимость = (КоличествоФайловОтвета > 0);
	Элементы.ДобавитьФайлНесколькоВопросов.Видимость = (КоличествоФайловОтвета = 0);
	
	
	Элементы.СканироватьФайлОтвета.Видимость = (КоличествоФайловОтвета = 0);
	Элементы.СканироватьФайлОтветаНесколькоВопросов.Видимость = (КоличествоФайловОтвета = 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныйФайлНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ФайлПрикрепленный = Неопределено ИЛИ ФайлПрикрепленный.Пустая() Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаДляОткрытия(ФайлПрикрепленный,
		Неопределено, УникальныйИдентификатор, Неопределено, ФайлПредыдущийАдрес);
	КомандыРаботыСФайламиКлиент.Открыть(ДанныеФайла);

КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	Если ФайлПрикрепленный = Неопределено Или ФайлПрикрепленный.Пустая() Тогда 
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьФайлЗавершение", ЭтотОбъект);
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Пометить ""%1"" на удаление?'"), ФайлПрикрепленный);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайлЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	РезультатУдаления = УстановитьПометкуУдаленияФайла();
	Если НЕ РезультатУдаления.ФайлУдален Тогда
		ПоказатьПредупреждениеОбОшибкеПриУдаленииФайла(РезультатУдаления.ОписаниеОшибки);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция УстановитьПометкуУдаленияФайла()
	
	Результат = Новый Структура();
	Результат.Вставить("ФайлУдален",Ложь);
	Результат.Вставить("ОписаниеОшибки","");
	
	НачатьТранзакцию();
	
	Попытка
		
		ОбъектФайлПрикрепленный = ФайлПрикрепленный.ПолучитьОбъект();
		ОбъектФайлПрикрепленный.УстановитьПометкуУдаления(Не ОбъектФайлПрикрепленный.ПометкаУдаления);
		
		ЗафиксироватьТранзакцию();
		Результат.ФайлУдален = Истина;
			
		ОбновитьФайлЗаписи();
		УстановитьДоступностьФайлаОтвета();
		
	Исключение
		Инфо = ИнформацияОбОшибке();
		ОтменитьТранзакцию();
		Результат.ОписаниеОшибки = КраткоеПредставлениеОшибки(Инфо);
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьПредупреждениеОбОшибкеПриУдаленииФайла(ТекстОшибки)
	
	ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Ошибка удаления файла: %1'"),
		ТекстОшибки);
	ПоказатьПредупреждение(, ТекстПредупреждения);	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьЗаявителя(Заявитель, ПочтовыйАдрес, АдресЭлектроннойПочты)
	
	СоздаваемыйЗаявитель = Справочники.Заявители.СоздатьЭлемент();
	СоздаваемыйЗаявитель.Наименование = Заявитель;
	СоздаваемыйЗаявитель.ПочтовыйАдрес = ПочтовыйАдрес;
	СоздаваемыйЗаявитель.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
	СоздаваемыйЗаявитель.Записать();
	
	Возврат СоздаваемыйЗаявитель.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура СканироватьФайлОтвета(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			"Создание:", 
			НавигационнаяСсылкаДокумента,
			ПредставлениеОбъекта,
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	НеОткрыватьКарточкуПослеСозданияИзФайла = Истина;
	Ответный = Истина;
	РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект.Ссылка, УникальныйИдентификатор, 
		НеОткрыватьКарточкуПослеСозданияИзФайла, Ответный);
	
КонецПроцедуры

#КонецОбласти
