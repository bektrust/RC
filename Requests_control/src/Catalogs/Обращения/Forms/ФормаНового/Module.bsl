
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заявитель = "";
	
	Если Параметры.Свойство("ЗагруженИзПочты") Тогда 
		ЗагруженИзПочты = Параметры.ЗагруженИзПочты;
	КонецЕсли;	
	Если Параметры.Свойство("Идентификатор") Тогда 
		Идентификатор = Параметры.Идентификатор;
	КонецЕсли;	
	
	Если Параметры.Свойство("Заявитель") Тогда 
		Заявитель = Параметры.Заявитель;
	КонецЕсли;	
	Если Параметры.Свойство("АдресЭлектроннойПочты") Тогда 
		АдресЭлектроннойПочты = Параметры.АдресЭлектроннойПочты;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Заявитель) И ТипЗнч(Заявитель) = Тип("СправочникСсылка.Заявители") Тогда
		ЗаполнитьДанныеЗаявителя(Заявитель);
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаОтправки") Тогда 
		Объект.ДатаПоступления = Параметры.ДатаОтправки;
	КонецЕсли;	
	
	Если Параметры.Свойство("Тема") И Параметры.Свойство("Текст") Тогда 
		Объект.Содержание = Параметры.Тема + Символы.ВК + Параметры.Текст;
	КонецЕсли;	
	
	// Вложения из письма
	Если Параметры.Свойство("Вложения") И Параметры.Вложения.Количество() > 0 Тогда 
		
		ЕстьВложения = Истина;
		Для Каждого Вложение Из Параметры.Вложения Цикл
			НоваяСтрока = ФайлыДобавленные.Добавить();
			НоваяСтрока.Наименование = Вложение.Имя;
			
			ДанныеФайла = ПолучитьИзВременногоХранилища(Вложение.Адрес);
			НоваяСтрока.ПолныйПуть = ПоместитьВоВременноеХранилище(ДанныеФайла, УникальныйИдентификатор);
			
			НоваяСтрока.ИндексКартинки = Вложение.ИндексКартинки;
			НоваяСтрока.Расширение = Вложение.Расширение;
			НоваяСтрока.Размер = Вложение.Размер;
			НоваяСтрока.ШаблонОснованиеДляСоздания = Неопределено;
			НоваяСтрока.ДобавленИзШаблона = Ложь;
			НоваяСтрока.СодержитДвоичныеДанные = Истина;
			НоваяСтрока.Идентификатор = Вложение.Идентификатор;
		КонецЦикла;
		
		КоличествоФайловТаблицы = ФайлыДобавленные.Количество();
		КоличествоФайлов = КоличествоФайловТаблицы;
		
	КонецЕсли;
	
	Элементы.Назад.Доступность = Ложь;
	УчитыватьВидыОбращений = ПолучитьФункциональнуюОпцию("УчитыватьВидыОбращений");
	
	Если Не УчитыватьВидыОбращений Тогда 
		ПрисвоитьНомер();
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаОсновные;
	КонецЕсли;
	
	// Помощник в виде быстрого выбора срока: 1, 5, 7, 15, 30 дней (календарных)
	СрокиРассмотрения = РаботаСОбращениями.ПолучитьСрокиРассмотренияОбращений();
	Для Каждого Срок Из СрокиРассмотрения Цикл 
		Элементы.СрокРассмотрения.СписокВыбора.Добавить(Срок.Значение, Срок.Представление);
	КонецЦикла;
	Элементы.СрокРассмотрения.СписокВыбора.Добавить(НСтр("ru = 'Выбрать дату'"));
	
	ПодборИзКлассификатораОбращенийГражданСервер.ИнициализироватьКэшДанныхФормы(ЭтаФорма);
	
	Элементы.ОткрытьЗагрузкуКлассификатора.Видимость = 
		Пользователи.ЭтоПолноправныйПользователь() 
		И ПодборИзКлассификатораОбращенийГражданСервер.КлассификаторОбращенийНеЗаполнен();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПриЗакрытии(ЗавершениеРаботы) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда 
		СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(Объект);
		Нумерация.ОсвободитьНомер(СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Заявитель"
		И Параметр = Заявитель Тогда
		Прочитать();
		ЗаполнитьДанныеЗаявителя(Заявитель);
	ИначеЕсли ИмяСобытия = "Выполнена_загрузка_классификатора_обращений" Тогда
		Для Каждого ЭлементКлассификатора Из КэшДанныхФормы.ЭлементыКлассификатора Цикл
			Элементы[ЭлементКлассификатора.Значение.ТаблицаФормы].Обновить();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РаботаСОбращениямиКлиент.УдалитьПустыеСтрокиТаблицы(Объект.Вопросы, "Вопрос");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СоздатьОбновитьЗаявителя(Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	Для Каждого ТекущиеДанные Из ТекущийОбъект.Вопросы Цикл
		
		ТекущиеДанные.КодВопроса = РаботаСОбращениями.СформироватьКодВопроса(
			ТекущиеДанные.Раздел, ТекущиеДанные.Тематика,
			ТекущиеДанные.Тема, ТекущиеДанные.Вопрос);
			
	КонецЦикла;	
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Создание файлов при сохранении нового документа
	Если ФайлыДобавленные.Количество() > 0 Тогда
		
		Индекс = ФайлыДобавленные.Количество() - 1;
		Пока Индекс >= 0 Цикл
			ФайлТаблицы = ФайлыДобавленные[Индекс]; 
			Если Не ЭтоАдресВременногоХранилища(ФайлТаблицы.ПолныйПуть) Тогда
				Индекс = Индекс - 1;
				Продолжить;
			КонецЕсли;
			
			ДанныеФайла = ПолучитьИзВременногоХранилища(ФайлТаблицы.ПолныйПуть);
			ВладелецФайла = Объект.Ссылка;
			
			Приемник = Неопределено; // ссылка на созданный файл
			
			СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле("ФайлСВерсией");
			
			Если ТипЗнч(ДанныеФайла) = Тип("ДвоичныеДанные") Тогда
				
				СведенияОФайле.ИмяБезРасширения = ФайлТаблицы.Наименование;
				СведенияОФайле.АдресВременногоХранилищаФайла = ФайлТаблицы.ПолныйПуть;
				
				СведенияОФайле.РасширениеБезТочки = ФайлТаблицы.Расширение;
				СведенияОФайле.ВремяИзменения = ТекущаяДата();
				СведенияОФайле.ВремяИзмененияУниверсальное = ТекущаяДата();
				СведенияОФайле.Автор = ПользователиКлиентСервер.ТекущийПользователь();
				СведенияОФайле.Размер = ФайлТаблицы.Расширение;
				
				ИзвлекатьТекстыФайловНаСервере = ФайловыеФункции.ИзвлекатьТекстыФайловНаСервере();
				Если Не ИзвлекатьТекстыФайловНаСервере Тогда
					
					ИмяВременногоФайла = ПолучитьИмяВременногоФайла(ФайлТаблицы.Расширение);
					ДанныеФайла.Записать(ИмяВременногоФайла);
					
					Текст = ФайловыеФункцииСлужебныйКлиентСервер.ИзвлечьТекст(
						ИмяВременногоФайла, 
						Ложь); // Отказ
						
					СведенияОФайле.АдресВременногоХранилищаТекста = Новый ХранилищеЗначения(Текст);
						
					УдалитьФайлы(ИмяВременногоФайла);
						
				Иначе
					СведенияОФайле.АдресВременногоХранилищаТекста = "";
				КонецЕсли;
				
				Приемник = РаботаСФайламиВызовСервера.СоздатьФайлСВерсией(ВладелецФайла, СведенияОФайле);
				
			ИначеЕсли ТипЗнч(ДанныеФайла) = Тип("Структура") Тогда
				
				ХранитьВерсииНовыйФайл = Истина;
				
				Источник = ДанныеФайла.Ссылка;
				ХранитьВерсииНовыйФайл = Источник.ХранитьВерсии;
				
				Если ТипЗнч(Объект.Ссылка) <> ТипЗнч(ДанныеФайла.Владелец) Или ФайлТаблицы.ДобавленИзШаблона Тогда 
					ХранитьВерсииНовыйФайл = Истина;
				КонецЕсли;	
				
				СведенияОФайле.Комментарий = Источник.Описание;
				СведенияОФайле.ИмяБезРасширения = Источник.ПолноеНаименование;
				СведенияОФайле.ХранитьВерсии = ХранитьВерсииНовыйФайл;
				
				Приемник = РаботаСФайламиВызовСервера.СоздатьФайл(ВладелецФайла, СведенияОФайле);
				
				Если Не Источник.ТекущаяВерсия.Пустая() Тогда
					
					ХранилищеФайла = Неопределено;
					Если Источник.ТекущаяВерсия.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе Тогда
						ХранилищеФайла = РаботаСФайламиВызовСервера.ПолучитьХранилищеФайлаИзИнформационнойБазы(Источник.ТекущаяВерсия);
					КонецЕсли;
					
					СведенияОФайле.Размер = Источник.ТекущаяВерсия.Размер;
					СведенияОФайле.РасширениеБезТочки = Источник.ТекущаяВерсия.Расширение;
					СведенияОФайле.АдресВременногоХранилищаФайла = ХранилищеФайла;
					СведенияОФайле.АдресВременногоХранилищаТекста = Источник.ТекущаяВерсия.ТекстХранилище;
					СведенияОФайле.СсылкаНаВерсиюИсточник = Источник.ТекущаяВерсия;
					СведенияОФайле.ВремяИзменения = Источник.ТекущаяВерсия.ДатаМодификацииФайла;
					СведенияОФайле.ВремяИзмененияУниверсальное = Источник.ТекущаяВерсия.ДатаМодификацииУниверсальная;

					Версия = РаботаСФайламиВызовСервера.СоздатьВерсию(Приемник, СведенияОФайле);
					
					РаботаСФайламиВызовСервера.ОбновитьВерсиюВФайле(Приемник, Версия, Источник.ТекущаяВерсия.ТекстХранилище);
					
					ПараметрыРаспознавания = РаботаСФайламиВызовСервера.ПодготовитьПараметрыРаспознавания();
					Если ПараметрыРаспознавания <> Неопределено И ПараметрыРаспознавания.Свойство("РаспознатьПослеДобавления") И ПараметрыРаспознавания.РаспознатьПослеДобавления Тогда
						РаспознатьНемедленно = Ложь;
						ОписаниеОшибки = "";
						РаспознанныйТекст = "";
						РаботаСФайламиВызовСервера.РаспознатьФайл(Приемник, ПараметрыРаспознавания, ОписаниеОшибки,
							РаспознанныйТекст, УникальныйИдентификатор,  РаспознатьНемедленно);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;	
			
			ФайлТаблицы.СсылкаСозданногоФайла = Приемник;
			
			ФайлыДобавленные.Удалить(Индекс);
			Индекс = Индекс - 1;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ЗагруженИзПочты Тогда
		
		ПараметрыОповещения = Новый Структура("Ссылка, Идентификатор", 
			Объект.Ссылка, Идентификатор);
			
		Оповестить("Обращение_ЗаписьИзПочты", ПараметрыОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.ТипОбращения <> Перечисления.ТипыОбращений.Анонимное Тогда 
		Если Не ЗначениеЗаполнено(Заявитель) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнено поле ""Заявитель""'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
					"Заявитель",, Отказ);
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Заявитель)
			И Не ЗначениеЗаполнено(ПочтовыйАдрес)
			И Не ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
			ТекстОшибки = НСтр("ru = 'Укажите почтовый адрес или адрес электронной почты'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
					"ПочтовыйАдрес",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресЭлектроннойПочты)
		И Не РаботаСоСтроками.ЭтоАдресЭлектроннойПочты(АдресЭлектроннойПочты) Тогда
		
		ТекстОшибки = НСтр("ru = 'Укажите корректный адрес электронной почты'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
				"АдресЭлектроннойПочты",, Отказ);
			
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипОбращенияПриИзменении(Элемент)
	
	Если Объект.ТипОбращения = ПредопределенноеЗначение("Перечисление.ТипыОбращений.Персональное") Тогда 
		Элементы.ГруппаЗаявитель.Доступность = Истина;
		Элементы.АдресЭлектроннойПочты.Доступность = Истина;
		Элементы.КоличествоОбратившихся.Видимость = Ложь;
		Элементы.Заявитель.АвтоОтметкаНезаполненного = Истина;
		
	ИначеЕсли Объект.ТипОбращения = ПредопределенноеЗначение("Перечисление.ТипыОбращений.Коллективное") Тогда 
		Элементы.ГруппаЗаявитель.Доступность = Истина;
		Элементы.АдресЭлектроннойПочты.Доступность = Истина;
		Элементы.КоличествоОбратившихся.Видимость = Истина;
		Элементы.Заявитель.АвтоОтметкаНезаполненного = Истина;
		
	ИначеЕсли Объект.ТипОбращения = ПредопределенноеЗначение("Перечисление.ТипыОбращений.Анонимное") Тогда 
		Элементы.ГруппаЗаявитель.Доступность = Ложь;
		Элементы.АдресЭлектроннойПочты.Доступность = Ложь;
		Элементы.КоличествоОбратившихся.Видимость = Ложь;
		Элементы.Заявитель.АвтоОтметкаНезаполненного = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СрокРассмотренияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Число") Тогда
		
		ДатаНовая = НачалоДня(ТекущаяДата()) + ВыбранноеЗначение * 86400; // ВыбранноеЗначение - дней, умножим на 86400, чтобы получить секунды
		Объект.СрокРассмотрения = ДатаНовая;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		
		ДатаНапоминания = НачалоДня(ТекущаяДата());
		Подсказка = "Введите дату";
		ЧастьДаты = ЧастиДаты.Дата;
		Оповещение = Новый ОписаниеОповещения("ПослеВводаДаты", ЭтотОбъект, Параметры);
		ПоказатьВводДаты(Оповещение, ДатаНапоминания, Подсказка, ЧастьДаты);

	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Дата") Тогда
		
		Объект.СрокРассмотрения = ВыбранноеЗначение;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДаты(Дата, Параметры) Экспорт
	
	Если НЕ Дата = Неопределено Тогда
		Объект.СрокРассмотрения = Дата;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправленоОтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИсходящийНомерДокумента", Объект.ИсходящийНомер);
	ПараметрыФормы.Вставить("ОрганДляПередачи", Объект.Источник);
	ПараметрыФормы.Вставить("ИсходящаяДатаДокумента", Объект.ДатаПоОбращению);
	
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Перенаправлено от'"));
	ПараметрыФормы.Вставить("РежимПеренаправлено", Истина);
	
	Обработчик = Новый ОписаниеОповещения("ПеренаправленоОтПослеВыбора", 
		ЭтотОбъект);
	ОткрытьФорму("Справочник.Обращения.Форма.ФормаВыбораУчереждения", ПараметрыФормы,,,,,
		Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправленоОтПослеВыбора(Результат, Параметры) Экспорт 
	
	Если Результат <> Неопределено Тогда 
		Объект.ИсходящийНомер = Результат.ИсходящийНомерДокумента;
		Объект.Источник = Результат.ОрганДляПередачи;
		Объект.ДатаПоОбращению = Результат.ИсходящаяДатаДокумента;
		
		Если ЗначениеЗаполнено(Объект.Источник) Тогда 
			Если ЗначениеЗаполнено(Объект.ИсходящийНомер) Или ЗначениеЗаполнено(Объект.ДатаПоОбращению) Тогда 
				ПеренаправленоОт = СтрШаблон(НСтр("ru = '%1, №%2 от %3'"),
					Строка(Объект.Источник), СокрЛП(Объект.ИсходящийНомер), Формат(Объект.ДатаПоОбращению, "ДЛФ=D"));
			Иначе 
				ПеренаправленоОт = Строка(Объект.Источник);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренаправленоОтОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.ИсходящийНомер = Неопределено;
	Объект.Источник = Неопределено;
	Объект.ДатаПоОбращению = Неопределено;
	ПеренаправленоОт = "";
	
КонецПроцедуры

// Работа с Заявителем

&НаКлиенте
Процедура ЗаявительПриИзменении(Элемент)
	
	ЗаполнитьДанныеЗаявителя(Заявитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	Если ТипЗнч(Заявитель) = Тип("Строка") Тогда
		ПараметрыФормы.Вставить("ТекстЗаполнения", Элемент.ТекстРедактирования);
	Иначе
		ПараметрыФормы.Вставить("ТекущаяСтрока", Заявитель);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Заявители.ФормаВыбора",
		ПараметрыФормы,
		Элементы.Заявитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПолучитьДанныеВыбораЗаявителя(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ПолучитьДанныеВыбораЗаявителя(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

// Работа с классификатором обращений граждан

&НаКлиенте
Процедура КодВопросаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если СтрДлина(Текст) < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоРедактированиеКодаВопроса = Истина;
	
	ПодборИзКлассификатораОбращенийГражданКлиент.ПроанализироватьКодВопросаПолучитьСоставляющие(
		ЭтаФорма,
		Текст,
		СтандартнаяОбработка);
		
	РаботаСОбращениямиКлиент.ОбновитьСписки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КодВопросаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЭтоРедактированиеКодаВопроса = Ложь;	
	
	ПодборИзКлассификатораОбращенийГражданКлиент.ПроанализироватьКодВопросаПолучитьСоставляющие(
		ЭтаФорма,
		Текст,
		СтандартнаяОбработка);
		
	РаботаСОбращениямиКлиент.ОбновитьСписки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыДокументов

&НаКлиенте
Процедура ВидыОбращенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Далее(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыОбращенийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	Если Копирование Тогда 
		ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.ВидыОбращений.ТекущаяСтрока);
	КонецЕсли;
	ПараметрыФормы.Вставить("НеСоздаватьДокументПриЗакрытии", Истина);
	
	ОткрытьФорму("Справочник.ВидыОбращений.ФормаОбъекта", ПараметрыФормы, Элементы.ВидыОбращений);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаВопросов

&НаКлиенте
Процедура ТаблицаВопросыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВопросыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВопросыПослеУдаления(Элемент)
	
	Если Не Объект.Вопросы.Количество() Тогда
		Назад(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьВидДокумента(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НеСоздаватьДокументПриЗакрытии", Истина);
	
	ОткрытьФорму("Справочник.ВидыОбращений.ФормаОбъекта", ПараметрыФормы, Элементы.ВидыОбращений);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если УчитыватьВидыОбращений И Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВиды Тогда 
		
		Элементы.Назад.Доступность = Ложь;
		
	ИначеЕсли УчитыватьВидыОбращений И Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаОсновные Тогда 
		
		СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(Объект);
		Нумерация.ОсвободитьНомер(СтруктураПараметров);
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВиды;
		Элементы.Назад.Доступность = Ложь;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаПодборИзКлассификатора Тогда 
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаОсновные;
		Элементы.Назад.Доступность = УчитыватьВидыОбращений;
	
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаВопросы Тогда

		ИзменитьТекстПодсказки(Элементы.Назад.ИмяКоманды, НСтр("ru = 'Назад'"));
		Элементы.Назад.Заголовок = НСтр("ru = '< Назад'");
		Элементы.Далее.Заголовок = НСтр("ru = 'Далее >'");
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаПодборИзКлассификатора;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Элементы.Назад.Доступность = Истина;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВиды Тогда
		
		ТекущаяСтрока = Элементы.ВидыОбращений.ТекущаяСтрока;
		Если Не ЗначениеЗаполнено(ТекущаяСтрока) Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Выберите вид обращения.'"));
			Возврат;
		КонецЕсли;
		Объект.ВидОбращения = ТекущаяСтрока;
		
		ПрисвоитьНомер();
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаОсновные;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаОсновные Тогда
		
		ОчиститьСообщения();
		Если Не ПроверитьЗаполнение() Тогда 
			Возврат;
		КонецЕсли;
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаПодборИзКлассификатора;

	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаПодборИзКлассификатора Тогда
		Если Не ПодборИзКлассификатораОбращенийГражданКлиент.КлючевыеПоляЗаполнены(ЭтаФорма) Тогда
			Возврат;
		КонецЕсли;
		
		ОписаниеВопроса = Новый Структура("Раздел, Тематика, Тема, Вопрос");
		ЗаполнитьЗначенияСвойств(ОписаниеВопроса, ЭтаФорма);
		
		Если Не Объект.Вопросы.НайтиСтроки(ОписаниеВопроса).Количество() Тогда
			ОписаниеВопроса.Вставить("КодВопроса", КодВопроса);
			ЗаполнитьЗначенияСвойств(Объект.Вопросы.Добавить(), ОписаниеВопроса);
		КонецЕсли;
				
		ОписаниеВопроса = Новый Структура(
			"Раздел, Тематика, Тема, Вопрос, КодВопроса",
			Неопределено, Неопределено, Неопределено, Неопределено, Неопределено);
			
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ОписаниеВопроса);
		
		#Если Не ВебКлиент Тогда
		ИзменитьТекстПодсказки(Элементы.Назад.ИмяКоманды, НСтр("ru = 'Добавить еще вопрос'"));
		#КонецЕсли
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаВопросы;
		Элементы.Назад.Заголовок = НСтр("ru = 'Добавить еще вопрос'");
		Элементы.Далее.Заголовок = НСтр("ru = 'Готово'");
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаВопросы Тогда
		
		ОчиститьСообщения();
		Если ЗначениеЗаполнено(Объект.ДатаДокумента)
			И Объект.Вопросы.Количество() = 0 Тогда 
			ТекстОшибки = НСтр("ru = 'Не введено ни одной строки в список ""Вопросы""'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,
				"Объект.Вопросы");
			Возврат;
		КонецЕсли;
		
		ЗакрытьМастерИОткрытьФормуЭлемента(); // временно
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьМастерИОткрытьФормуЭлемента()
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Закрыть();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.Ссылка);
	
	ПараметрыФормы.Вставить("ЭтоТолькоЧтоСозданныйДокумент", Истина);
	
	ОткрытьФорму("Справочник.Обращения.Форма.ФормаЭлемента", ПараметрыФормы, ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗагрузкуКлассификатора(Команда)
	
	ОткрытьФорму(
		"Обработка.ЗагрузкаКлассификатораОбращенийГраждан.Форма.ФормаВыбораИзКлассификатора",
		,
		ЭтаФорма, , , , ,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыРазделы

&НаКлиенте
Процедура РазделыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПриАктивизацииСтроки(Элемент)
	
	Тема		  = Неопределено;
	Вопрос		  = Неопределено;
	ТекущиеДанные = Элементы.Тематики.ТекущиеДанные;
	
	ПодборИзКлассификатораОбращенийГражданКлиент.ОбработчикСобытияТаблицыФормыПриАктивизацииСтроки(
		ЭтаФорма, Элемент);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Тематики,
		"Раздел",
		Раздел,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыТематики

&НаКлиенте
Процедура ТематикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТематикиПриАктивизацииСтроки(Элемент)
	
	Тема		  = Неопределено;
	Вопрос		  = Неопределено;
	ТекущиеДанные = Элементы.Тематики.ТекущиеДанные;
		
	ПодборИзКлассификатораОбращенийГражданКлиент.ОбработчикСобытияТаблицыФормыПриАктивизацииСтроки(ЭтаФорма, Элемент);		
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Темы,
		"Тематика",
		Тематика,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыТемы

&НаКлиенте
Процедура ТемыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТемыПриАктивизацииСтроки(Элемент)
	
	Вопрос		  = Неопределено;
	ПодборИзКлассификатораОбращенийГражданКлиент.ОбработчикСобытияТаблицыФормыПриАктивизацииСтроки(ЭтаФорма, Элемент);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Вопросы,
		"Тема",
		Тема,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыВопросы

&НаКлиенте
Процедура ВопросыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Далее(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросыПриАктивизацииСтроки(Элемент)
	
	ПодборИзКлассификатораОбращенийГражданКлиент.ОбработчикСобытияТаблицыФормыПриАктивизацииСтроки(ЭтаФорма, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ПолучитьДанныеВыбораЗаявителя(Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("Отбор", Новый Структура);
	ПараметрыВыбора.Вставить("СтрокаПоиска", Текст);
	
	ДанныеВыбора = Справочники.Заявители.ПолучитьДанныеВыбора(ПараметрыВыбора);
	
	ПредставлениеНового = Новый ФорматированнаяСтрока(
		Текст, 
		Новый ФорматированнаяСтрока(" (новый заявитель)", , WebЦвета.Серый));
	ДанныеВыбора.Вставить(0, Текст, ПредставлениеНового);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьОбновитьЗаявителя(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.ТипОбращения <> Перечисления.ТипыОбращений.Анонимное Тогда
		Если ТипЗнч(Заявитель) = Тип("СправочникСсылка.Заявители") Тогда
			ЗаблокироватьДанныеДляРедактирования(Заявитель);
			ОбновляемыйЗаявитель = Заявитель.ПолучитьОбъект();
			ОбновляемыйЗаявитель.ПочтовыйАдрес = ПочтовыйАдрес;
			ОбновляемыйЗаявитель.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
			ОбновляемыйЗаявитель.Записать();
		Иначе
			СоздаваемыйЗаявитель = Справочники.Заявители.СоздатьЭлемент();
			СоздаваемыйЗаявитель.Наименование = Заявитель;
			СоздаваемыйЗаявитель.ПочтовыйАдрес = ПочтовыйАдрес;
			СоздаваемыйЗаявитель.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
			СоздаваемыйЗаявитель.Записать();
			Заявитель = СоздаваемыйЗаявитель.Ссылка;
		КонецЕсли;
		
		ТекущийОбъект.Заявитель = Заявитель;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеЗаявителя(ТекущийЗаявитель)
	
	Если ТипЗнч(ТекущийЗаявитель) = Тип("СправочникСсылка.Заявители")
		И ЗначениеЗаполнено(ТекущийЗаявитель) Тогда 
		Заявитель = ТекущийЗаявитель;
		ДанныеЗаявителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущийЗаявитель,
			"АдресЭлектроннойПочты, ПочтовыйАдрес");
		ПочтовыйАдрес = ДанныеЗаявителя.ПочтовыйАдрес;
		АдресЭлектроннойПочты = ДанныеЗаявителя.АдресЭлектроннойПочты;
		Элементы.ПочтовыйАдрес.ТолькоПросмотр = Истина;
		Элементы.АдресЭлектроннойПочты.ТолькоПросмотр = Истина;
	Иначе 
		Заявитель = Справочники.Заявители.ПустаяСсылка();
		ПочтовыйАдрес = "";
		АдресЭлектроннойПочты = "";
		Элементы.ПочтовыйАдрес.ТолькоПросмотр = Ложь;
		Элементы.АдресЭлектроннойПочты.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьНомер()
	
	// Присвоение номера
	Объект.ДатаДокумента = ТекущаяДата();
	Нумерация.СформироватьЧисловойНомерДокумента(Объект, Объект.ЧисловойНомер);
	ОписанияОшибок = Новый СписокЗначений;
	Нумерация.СформироватьСтроковыйНомерДокумента(Объект, Объект.НомерДокумента, ОписанияОшибок);
	АвтоматическийНомер = Объект.НомерДокумента;
	
	Для Каждого ОписаниеОшибки Из ОписанияОшибок Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ОписаниеОшибки.Представление,,
			ОписаниеОшибки.Значение,
		"Объект");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеФормы()
	
	ВыполнитьВызовСервера();
	Элементы.КодВопроса.ОбновитьТекстРедактирования();
	Элементы.КодВопроса.УстановитьГраницыВыделения(1, 1);

КонецПроцедуры

&НаСервере
Процедура ВыполнитьВызовСервера()
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекстПодсказки(Команда, ТекстПодсказки)
	
	Команды[Элементы[Команда].ИмяКоманды].Подсказка = ТекстПодсказки;
	
КонецПроцедуры

#КонецОбласти