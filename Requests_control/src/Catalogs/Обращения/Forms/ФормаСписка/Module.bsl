
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ПриНачалеРаботыСистемы") Тогда
		КоличествоЗанятыхФайлов = РаботаСФайламиВызовСервера.ПолучитьКоличествоЗанятыхФайлов(, 
			ПользователиКлиентСервер.ТекущийПользователь());
		Если КоличествоЗанятыхФайлов <> 0 Тогда 
			НужноПоместитьЗанятыеФайлы = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Состояние = "ВсеДокументы";
	
	РаботаСОбращениями.СписокДокументовУсловноеОформлениеПомеченныхНаУдаление(Список);
	РаботаСОбращениями.СписокДокументовУсловноеОформлениеПросроченных(Список);
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", НачалоДня(ТекущаяДатаСеанса()));
	Список.Параметры.УстановитьЗначениеПараметра("ДатаПлюс3Дня", 
		НачалоДня(ТекущаяДатаСеанса()) + 3 * 86400);
	
	ПоказыватьУдаленные = Ложь;
	ПоказатьУдаленные();
	
	ПриложениеЯвляетсяВебКлиентом = ОбщегоНазначенияДокументооборот.ПриложениеЯвляетсяВебКлиентом();
	Если ПриложениеЯвляетсяВебКлиентом Тогда
		Элементы.ФормаЗагрузитьСоСканера.Видимость = Ложь;
		Элементы.ЗагрузитьСоСканераВсеДействия.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НужноПоместитьЗанятыеФайлы Тогда
		ПодключитьОбработчикОжидания("ПоместитьЗанятыеФайлы", 0.1, Истина);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка();
	
	ПоказыватьУдаленные = Настройки["ПоказыватьУдаленные"];
	ПоказатьУдаленные();
	
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ОтборСостояниеДокумента, Состояние, "ВсеДокументы");
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы.ПериодВыборки, ПериодВыборки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КомпонентаСканированияУстановлена" Тогда
		УстановитьДоступностьСканирования();
	КонецЕсли;
	
	Если ИмяСобытия = "Сканирование_Файла" Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Владелец")
			И Параметр.Свойство("ИмяФайла") 
			 И Параметр.Свойство("ПутьФайла") И ЗначениеЗаполнено(Параметр.ПутьФайла)
			 И Параметр.Владелец = ИмяФормы Тогда
			 
			#Если Не ВебКлиент Тогда 
			ИмяФайла = Параметр.ИмяФайла; 
			 
			Файл = Новый Файл(Параметр.ПутьФайла);
			КопияФайлаПуть = ПолучитьИмяВременногоФайла(Файл.Расширение);
			КопироватьФайл(Параметр.ПутьФайла, КопияФайлаПуть);
			ЗагрузитьСДискаФайл(КопияФайлаПуть, ИмяФайла);
			#КонецЕсли	
			
		КонецЕсли;	
		
		Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Владелец")
			 И Параметр.Свойство("МассивФайлов")
			 И Параметр.Владелец = ИмяФормы Тогда
			 
			#Если Не ВебКлиент Тогда
			МассивФайлов = Параметр.МассивФайлов; 
			 
			Вложения = Новый Массив;
			
			Для Каждого ФайлСтруктура Из МассивФайлов Цикл
				
				ФайлИсходный = Новый Файл(ФайлСтруктура.ПутьФайла);
				ПолноеИмяФайла = ПолучитьИмяВременногоФайла(ФайлИсходный.Расширение);
				КопироватьФайл(ФайлСтруктура.ПутьФайла, ПолноеИмяФайла);
				
				Файл = Новый Файл(ПолноеИмяФайла);
				ВложениеИнфо = Новый Структура;
				ВложениеИнфо.Вставить("Имя", Файл.ИмяБезРасширения);
				Если ЗначениеЗаполнено(ФайлСтруктура.ИмяФайла) Тогда
					ВложениеИнфо.Имя = ФайлСтруктура.ИмяФайла;
				КонецЕсли;	
					
				ВложениеИнфо.Вставить("ПолноеИмяФайла", ПолноеИмяФайла);
				ВложениеИнфо.Вставить("Расширение", Файл.Расширение);
				ВложениеИнфо.Вставить("Размер", Файл.Размер());
				ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
				Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
				ВложениеИнфо.Вставить("Адрес", Адрес);
				ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(Файл.Расширение);
				ВложениеИнфо.Вставить("ИндексКартинки", ИндексКартинки);
				ВложениеИнфо.Вставить("Идентификатор", "");
				Вложения.Добавить(ВложениеИнфо);
				
			КонецЦикла;
			
			// Открытие формы заполнения реквизитов документа
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("Вложения", Вложения);
			
			ОткрытьФорму(
				"Справочник.Обращения.ФормаОбъекта",
				ПараметрыОткрытия,,,,,,
				);
				
			#КонецЕсли		
			
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьОбращение(Команда)
	
	Элементы.Список.ДобавитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	
	ПоказатьУдаленные();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзПочты(Команда)
	
	ПараметрКоманды = Неопределено;
	
	ПараметрыФормы = Новый Структура;
	#Если ВебКлиент Тогда
		ПараметрыФормы.Вставить("ВебКлиент", Истина);
	#КонецЕсли
	
	Если Не ПараметрыОтправкиПочтовогоСообщенияПовтИсп.ЕстьДоступныеПрофилиПочты() Тогда
		// тут предлагаем настроить
		
		ПараметрыВыполнения = Новый Структура("ПараметрКоманды", ПараметрКоманды);
		Обработчик = Новый ОписаниеОповещения("ВыполнитьЗагрузкуПослеПроверки", 
			ЭтотОбъект, ПараметрыВыполнения);
			
		ДляОтправки = Ложь;
		ЛегкаяПочтаКлиент.НастроитьПочтуИВыполнить(Обработчик, ПараметрКоманды, ДляОтправки);
		
		Возврат;
		
	КонецЕсли;	
	
	ВыполнитьЗагрузкуПослеПроверки(ПараметрКоманды, Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСДиска(Команда)
	
	Если Не ФайловыеФункцииСлужебныйКлиент.РасширениеРаботыСФайламиПодключено() Тогда
		//ПоказатьПредупреждение(, НСтр("ru = 'Для загрузки с диска нужно установить расширение работы с файлами.'"));
		ЗагрузитьСДиска_ВебКлиент();
		Возврат;	
	КонецЕсли;	
	
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ВыборФайла.МножественныйВыбор = Ложь;
	ВыборФайла.Заголовок = НСтр("ru = 'Выбор файла договора'");
	ВыборФайла.Фильтр  
		= НСтр("ru = 'Документы (*.doc;*.docx;*.odt;*.txt;*.pdf)|*.doc;*.docx;*.odt;*.txt;*.pdf"
		+ "|Все файлы (*.*)|*.*"
		+ "'");

	Результат = ВыборФайла.Выбрать();
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = ВыборФайла.ПолноеИмяФайла;
	ЗагрузитьСДискаФайл(ПолноеИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСДиска_ВебКлиент()
	
	АдресФайла = "";
	ВыбранноеИмяФайла = "";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьСДискаЗавершение", ЭтотОбъект);
	НачатьПомещениеФайла(ОписаниеОповещения,,,Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСДискаЗавершение(Результат, АдресВременногоХранилища, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;	
	
	СтруктураПути = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ВыбранноеИмяФайла);
		
	ТолькоИмя 		 = СтруктураПути.ИмяБезРасширения;
	ТолькоРасширение = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(СтруктураПути.Расширение);
	
	Вложения = Новый Массив;
	
	ИмяФайла = ТолькоИмя;
	
	ВложениеИнфо = Новый Структура;
	
	ВложениеИнфо.Вставить("Имя", ИмяФайла);
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		ВложениеИнфо.Имя = ИмяФайла;
	КонецЕсли;	
		
	ВложениеИнфо.Вставить("ПолноеИмяФайла", ВыбранноеИмяФайла);
	ВложениеИнфо.Вставить("Расширение", ТолькоРасширение);
	ВложениеИнфо.Вставить("Размер", 0);
	
	ВложениеИнфо.Вставить("Адрес", АдресВременногоХранилища);
	ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(ТолькоРасширение);
	ВложениеИнфо.Вставить("ИндексКартинки", ИндексКартинки);
	ВложениеИнфо.Вставить("Идентификатор", "");
	Вложения.Добавить(ВложениеИнфо);
	
	// Открытие формы заполнения реквизитов документа
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Вложения", Вложения);
	
	ОткрытьФорму("Справочник.Обращения.ФормаОбъекта", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСоСканера(Команда)
	
	НеОткрыватьКарточкуПослеСозданияИзФайла = Истина;
	РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(
		ЭтаФорма.ИмяФормы, УникальныйИдентификатор, НеОткрыватьКарточкуПослеСозданияИзФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСДискаФайл(ПолноеИмяФайла, ИмяФайла = Неопределено)
	
	ДополнительныеПараметры = Новый Структура("ПолноеИмяФайла, ИмяФайла", ПолноеИмяФайла, ИмяФайла);
	ОписаниеОповещения = Новый ОписаниеОповещения("СозданиеДвоичныхДанныхИзФайлаЗавершение", 
		ЭтотОбъект, ДополнительныеПараметры);
	НачатьСозданиеДвоичныхДанныхИзФайла(ОписаниеОповещения, ПолноеИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура СозданиеДвоичныхДанныхИзФайлаЗавершение(ДвоичныеДанные, ДополнительныеПараметры) Экспорт
	
	ПолноеИмяФайла = ДополнительныеПараметры.ПолноеИмяФайла;
	ИмяФайла = ДополнительныеПараметры.ИмяФайла;
	
	Вложения = Новый Массив;
	
	Файл = Новый Файл(ПолноеИмяФайла);
	ВложениеИнфо = Новый Структура;
	ВложениеИнфо.Вставить("Имя", Файл.ИмяБезРасширения);
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		ВложениеИнфо.Имя = ИмяФайла;
	КонецЕсли;	
		
	ВложениеИнфо.Вставить("ПолноеИмяФайла", ПолноеИмяФайла);
	ВложениеИнфо.Вставить("Расширение", Файл.Расширение);
	ВложениеИнфо.Вставить("Размер", Файл.Размер());
	
	//ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
	
	Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	ВложениеИнфо.Вставить("Адрес", Адрес);
	ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(Файл.Расширение);
	ВложениеИнфо.Вставить("ИндексКартинки", ИндексКартинки);
	ВложениеИнфо.Вставить("Идентификатор", "");
	Вложения.Добавить(ВложениеИнфо);
	
	// Открытие формы заполнения реквизитов документа
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Вложения", Вложения);
	
	ОткрытьФорму("Справочник.Обращения.ФормаОбъекта", ПараметрыОткрытия);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ВыполнитьЗагрузкуПослеПроверки(ПараметрКоманды, ДополнительныеПараметры) Экспорт
	
	ОткрытьФорму("Обработка.ЗагрузкаЭлектроннойПочты.Форма");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьСканирования()
	
	ДоступнаКомандаСканировать = Истина;
	Элементы.ФормаЗагрузитьСоСканера.Доступность = ДоступнаКомандаСканировать;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборСостояниеДокументаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Состояние = "ВсеДокументы";
	
	УстановитьОтборСписка();
	
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, Состояние, "ВсеДокументы");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеДокументаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Состояние) Тогда 
		Состояние = "ВсеДокументы";
	КонецЕсли;	
	
	УстановитьОтборСписка();
	
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, Состояние, "ВсеДокументы");
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВыборкиПриИзменении(Элемент)
	
	УстановитьОтборСписка();
	
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, ПериодВыборки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПоказатьУдаленные()
	
	Если ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПометкаУдаления");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПометкаУдаления", Ложь);
	КонецЕсли;
	
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСписка()
	
	// период 
	Если ПериодВыборки <> Неопределено Тогда 
		
		ЭлементыОтбора = Список.Отбор.Элементы;
		
		ЭлементОтбораДанных = Неопределено;
		Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ЭлементОтбора.Представление = "ОтборПериод" Тогда
				ЭлементОтбораДанных = ЭлементОтбора;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ПериодВыборки) Тогда 
			
			Если ЭлементОтбораДанных = Неопределено Тогда
				ГруппаОтборПериод = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				ГруппаОтборПериод.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
				ГруппаОтборПериод.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
				ГруппаОтборПериод.Использование = Истина;
				ГруппаОтборПериод.Представление = "ОтборПериод";
			Иначе
				ГруппаОтборПериод = ЭлементОтбораДанных;
				ГруппаОтборПериод.Элементы.Очистить();
				ГруппаОтборПериод.Использование = Истина;
			КонецЕсли;	
			
			ГруппаДатаСортировки = ГруппаОтборПериод.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаДатаСортировки.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ; 
			ГруппаДатаСортировки.Использование = Истина;
			
			Если ЗначениеЗаполнено(ПериодВыборки.ДатаНачала) Тогда 
				ЭлементОтбораДанных = ГруппаДатаСортировки.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаДокумента");
				ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
				ЭлементОтбораДанных.ПравоеЗначение = ПериодВыборки.ДатаНачала;
				ЭлементОтбораДанных.Использование = Истина;
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ПериодВыборки.ДатаОкончания) Тогда 
				ЭлементОтбораДанных = ГруппаДатаСортировки.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаДокумента");
				ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
				ЭлементОтбораДанных.ПравоеЗначение = ПериодВыборки.ДатаОкончания;
				ЭлементОтбораДанных.Использование = Истина;
			КонецЕсли;
			
			Если ГруппаДатаСортировки.Элементы.Количество() = 0 Тогда 
				ГруппаОтборПериод.Элементы.Удалить(ГруппаДатаСортировки);
			КонецЕсли;
			
		Иначе
			
			Если ЭлементОтбораДанных <> Неопределено Тогда
				ГруппаОтборПериод = ЭлементОтбораДанных;
				ГруппаОтборПериод.Элементы.Очистить();
				ГруппаОтборПериод.Использование = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	Если Состояние = "МоиАктивные" Тогда 
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Отработано",
			Ложь);
			
	Иначе
			
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"Отработано");
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьЗанятыеФайлы()
	
	ЗанятыеФайлы = РаботаСФайламиВызовСервера.ПолучитьСписокЗанятыхФайлов();

	Обработчик = Новый ОписаниеОповещения("ПослеОкончанияРедактированияФайлов", ЭтотОбъект);
	
	РаботаСФайламиКлиент.ЗакончитьРедактированиеПоСсылкам(
		Обработчик,
		ЗанятыеФайлы,
		УникальныйИдентификатор,
		Истина, // СоздатьНовуюВерсию
		"", // КомментарийКВерсии
		Ложь, // ПоказыватьОповещение
		Истина, //ОсвобождатьБезВопросаФайлыКоторыхНетВРабочемКаталоге
		Истина); // НеПоказыватьОшибки
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОкончанияРедактированияФайлов(Результат = Неопределено, ПараметрыВыполнения = Неопределено) Экспорт
	
	Оповестить("ПослеОкончанияРедактированияФайлов");
	
КонецПроцедуры

#КонецОбласти
