#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда 
		ДатаПоступления = ТекущаяДатаСеанса();
		Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДатаПоступления = ТекущаяДатаСеанса();
	
	ДатаДокумента = ТекущаяДатаСеанса();
	НомерДокумента = "";
	ВсеВопросыНаРассмотрении = Ложь;
	ДатаПоОбращению = Неопределено;
	Источник = Неопределено;
	Источник = Неопределено;
	Источник = Неопределено;
	Источник = Неопределено;
	СрокРассмотренияПервоначальный = Неопределено;
	
	Для Каждого СтрокаВопрос Из Вопросы Цикл 
		СтрокаВопрос.ДатаОтвета = Неопределено;
		СтрокаВопрос.ИсходящаяДатаДокумента = Неопределено;
		СтрокаВопрос.ИсходящийНомерДокумента = Неопределено;
		СтрокаВопрос.ОрганДляПередачи = Неопределено;
		СтрокаВопрос.РезультатРассмотрения = Неопределено;
		СтрокаВопрос.МнениеАвтораОРезультатах = Неопределено;
		СтрокаВопрос.МнениеАвтораОМерах = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда 
		Если КоличествоСеансовИнформационнойБазы() > 1 Тогда 
			ВызватьИсключение НСтр("ru = 'Базовая версия не поддерживает одновременную работу нескольких пользователей.'");
		КонецЕсли;
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Наименование = Справочники.Обращения.ПолучитьНаименованиеОбъекта(ЭтотОбъект);
	Если Не ЗначениеЗаполнено(СрокРассмотренияПервоначальный) И ЗначениеЗаполнено(СрокРассмотрения) Тогда 
		СрокРассмотренияПервоначальный = СрокРассмотрения;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ПредыдущиеЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
			"ПометкаУдаления, Ответственный");
	Иначе
		ПредыдущиеЗначенияРеквизитов = Новый Структура;
		ПредыдущиеЗначенияРеквизитов.Вставить("ПометкаУдаления", Ложь);
		ПредыдущиеЗначенияРеквизитов.Вставить("Ответственный", Справочники.Пользователи.ПустаяСсылка());
	КонецЕсли;
	
	Если ПометкаУдаления И ПометкаУдаления <> ПредыдущиеЗначенияРеквизитов.ПометкаУдаления Тогда
		ДополнительныеСвойства.Вставить("УстановленаПометкаУдаления");
	КонецЕсли;
	
	Если Ответственный <> ПредыдущиеЗначенияРеквизитов.Ответственный Тогда
		ДополнительныеСвойства.Вставить("ИзменилсяОтветственный");
	КонецЕсли;
	
	// Пометка на удаление приложенных файлов.
	Если ПометкаУдаления <> ПредыдущиеЗначенияРеквизитов.ПометкаУдаления Тогда 
		
		РаботаСФайламиВызовСервера.ПометитьНаУдалениеПриложенныеФайлы(Ссылка, ПометкаУдаления);
		
	КонецЕсли;
	
	Если Вопросы.Количество() = 0 Тогда
		Отработано = Ложь;
		ВсеВопросыНаРассмотрении = Ложь;
	Иначе	
		
		ВсеВопросыОтработаны = Истина;
		ВсеВопросыНаРассмотрении = Истина;
		
		Для Каждого Вопрос Из Вопросы Цикл
			
			Если Не ЗначениеЗаполнено(Вопрос.РезультатРассмотрения) Тогда
				
				ВсеВопросыОтработаны = Ложь;
				
			Иначе 
				
				ВсеВопросыНаРассмотрении = Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Отработано = ВсеВопросыОтработаны;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("УстановленаПометкаУдаления") Тогда
		Справочники.Сообщения.ПометитьНаУдалениеПоПредмету(Ссылка);
	КонецЕсли;
	
	Если ТребуетсяСообщитьОтветственномуОНазначении() Тогда
		РаботаССообщениями.ДобавитьСообщениеОНазначенииОтветственным(Ответственный, Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ЧисловойНомер > 0 Тогда
		СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(ЭтотОбъект);
		Нумерация.ОсвободитьНомер(СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипОбращения <> Перечисления.ТипыОбращений.Анонимное Тогда 
		ПроверяемыеРеквизиты.Добавить(ВидОбращения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НомерДокумента) И ЗначениеЗаполнено(ДатаДокумента) Тогда 
		Если Не РаботаСОбращениями.НомерДокументаУникален(ЭтотОбъект) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Номер документа не уникален!'"),
				ЭтотОбъект,
				"НомерДокумента",, 
				Отказ);
		КонецЕсли;	
	КонецЕсли;
	
	//Проверка табличной части Вопросы на заполненность
	КоличествоВопросов = Вопросы.Количество();
	Если КоличествоВопросов > 1 Тогда
		Для Индекс = 1 По КоличествоВопросов - 1 Цикл
			Если Не ЗначениеЗаполнено(Вопросы[Индекс].Вопрос) Тогда 
				ТекстСообщения = НСтр("ru = '""Классификация"" не заполнена'");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,ЭтотОбъект,
					"Вопросы["+ Формат(Индекс, "ЧН=0; ЧГ=0") +"]",,Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция КоличествоСеансовИнформационнойБазы(УчитыватьКонсоль = Истина, УчитыватьФоновыеЗадания = Истина) Экспорт
	
	Результат = 0;
	
	СеансыИБ = ПолучитьСеансыИнформационнойБазы();
	Для Каждого СеансИБ Из СеансыИБ Цикл
		Если СеансИБ.ИмяПриложения = "SrvrConsole"
		 Или СеансИБ.ИмяПриложения = "BackgroundJob" 
		 Или СеансИБ.ИмяПриложения = "Designer" Тогда
			Продолжить;
		КонецЕсли;
		Результат = Результат + 1;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Проверяет, необходимо ли сообщить ответственному о назначении.
Функция ТребуетсяСообщитьОтветственномуОНазначении()
	
	ТребуетсяСообщитьОтветственномуОНазначении =
		ДополнительныеСвойства.Свойство("ИзменилсяОтветственный")
		И ПометкаУдаления = Ложь
		И Отработано = Ложь
		И ЗначениеЗаполнено(Ответственный)
		И Ответственный <> ПользователиКлиентСервер.ТекущийПользователь();
	
	Возврат ТребуетсяСообщитьОтветственномуОНазначении;
	
КонецФункции

#КонецЕсли
