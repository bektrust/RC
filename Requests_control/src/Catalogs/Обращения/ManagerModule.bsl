#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Программный_интерфейс

Функция ПолучитьНаименованиеОбъекта(Объект) Экспорт
	
	Наименование = "";
	
	Если Не (ТипЗнч(Объект) = Тип("СправочникОбъект.Обращения") Или ТипЗнч(Объект) = Тип("СправочникСсылка.Обращения")) Тогда
		Возврат Наименование;
	КонецЕсли;
	
	РеквизитыОбъекта = Объект;
	Если РеквизитыОбъекта = Тип("СправочникСсылка.Обращения") Тогда
		РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			РеквизитыОбъекта,
			"ТипОбращения, ВидОбращения, Заявитель, НомерДокумента, ДатаДокумента");
	КонецЕсли;
	
	Если РеквизитыОбъекта.ТипОбращения = Перечисления.ТипыОбращений.Анонимное Тогда
		Наименование = НСтр("ru = 'Анонимное обращение'");
	ИначеЕсли ПолучитьФункциональнуюОпцию("УчитыватьВидыОбращений") И ЗначениеЗаполнено(РеквизитыОбъекта.ВидОбращения) Тогда
		Наименование = Строка(РеквизитыОбъекта.ВидОбращения) + " " 
			+ НСтр("ru = 'от'") + " " 
			+ Строка(РеквизитыОбъекта.Заявитель);
	Иначе
		Наименование = НСтр("ru = 'Обращение'") + " " + НСтр("ru = 'от'") + " " + Строка(РеквизитыОбъекта.Заявитель);
	КонецЕсли;
		
	Если ЗначениеЗаполнено(РеквизитыОбъекта.НомерДокумента) Тогда 
		Наименование = Наименование + " " +
			СтрШаблон(НСтр("ru = '№ %1 от %2'"), 
				РеквизитыОбъекта.НомерДокумента, Формат(РеквизитыОбъекта.ДатаДокумента, "ДЛФ=D"));
	КонецЕсли;	
	
	Возврат Наименование;
	
КонецФункции

Функция ПолучитьСписокОбращенийПоЗаявителю(Заявитель) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заявитель", Заявитель);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Обращения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Обращения КАК Обращения
		|ГДЕ
		|	Обращения.Заявитель = &Заявитель";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Процедура ОбновитьОбращенияПриИзмененииЗаявителя(Заявитель) Экспорт
	
	СписокОбращенийЗаявителя = Справочники.Обращения.ПолучитьСписокОбращенийПоЗаявителю(Заявитель);
		
	Попытка 
		Для Каждого ЭлементСписка Из СписокОбращенийЗаявителя Цикл
			Обращение = ЭлементСписка.ПолучитьОбъект();
			Обращение.Заблокировать();
			Обращение.Наименование = Справочники.Обращения.ПолучитьНаименованиеОбъекта(Обращение);
			Обращение.ОбменДанными.Загрузка = Истина;
			Обращение.Записать();
		КонецЦикла;
	Исключение
		ВызватьИсключение СтрШаблон(
			Нстр("ru = 'При обновлении обращений заявителя произошла ошибка:
				|%1'"),
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;	
	
КонецПроцедуры

Функция ОбращенияЗаПериод(ДатаНачала, ДатаОкончания) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Обращения.Ссылка
		|ИЗ
		|	Справочник.Обращения КАК Обращения
		|ГДЕ
		|	НЕ Обращения.ПометкаУдаления
		|	И (
		|		Обращения.ДатаДокумента МЕЖДУ &ДатаНачала И &ДатаОкончания
		|		ИЛИ Обращения.ДатаПоОбращению МЕЖДУ &ДатаНачала И &ДатаОкончания
		|		ИЛИ Обращения.ДатаПоступления МЕЖДУ &ДатаНачала И &ДатаОкончания
		|		ИЛИ Обращения.Вопросы.ДатаОтвета МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	)
		|");
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Если ЗначениеЗаполнено(ДатаОкончания) Тогда
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	Иначе
		Запрос.УстановитьПараметр("ДатаОкончания", Дата(2099, 1, 1));
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

#КонецОбласти

#Область Обработчики_событий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВыбраннаяФорма = "ФормаЭлемента";
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда 
		ВыбраннаяФорма = "ФормаЭлемента";
	Иначе	
		ВыбраннаяФорма = "ФормаНового";
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли