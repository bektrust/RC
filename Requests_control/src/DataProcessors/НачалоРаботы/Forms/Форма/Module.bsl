#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПриЗакрытии(ЗавершениеРаботы) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МожноЗакрыть = Ложь;
	
	Элементы.Назад.Доступность = Ложь;
	Элементы.Закрыть.Видимость = Ложь;
	ЭтоБазоваяВерсияКонфигурации = Ложь;
	
	Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда 
		ЭтоБазоваяВерсияКонфигурации = Истина;
		Элементы.ДекорацияРассылкаРасшифровка.Заголовок = 
			НСтр("ru = '1С:УчетОбращений отправляют по почте уведомления о важных событиях.
                  |Укажите, с какого почтового ящика выполнять такие рассылки.
                  |Можно использовать вашу личную почту или завести специальный ящик.
                  |Это можно будет настроить потом (см. ""Настройка программы"").'");
	
	КонецЕсли;
	
	
	Итого = "<HTML><HEAD>
			| <META content=""text/html; charset=utf-8"" http-equiv=Content-Type>
			| </HEAD>
			|<style type=""text/css"">
			|	body {
			|		overflow:    auto;
			|		margin-top:  6px; 		 
			|		margin-left: 10px; 
			|		margin-bottom: 6px;
			|		font-family: Arial, sans-serif;
			|		font-size:   12pt;}
			|	p {
			|		margin-top: 7px;}
			|	UL {
			|		padding: 10;
			|		margin: 10;
			|	}
			|</style>
			| <BODY>
			| <H3>Программа ""1С:Учет обращений"" готова к работе:</H3>
			| <UL>
			| <LI>
			|	<p style=""margin-top: 7px; margin-bottom: 7px"">
			|		<STRONG>создавайте</STRONG> новые обращения
			|	</p>
			|</LI> 
			| <LI>
			|	<p style=""margin-top: 7px; margin-bottom: 7px"">
			|		<STRONG>загружайте</STRONG> обращения из почты 
			|	</p>
			|</LI>
			| <LI>
			|	<p style=""margin-top: 7px; margin-bottom: 7px"">
			|		<STRONG>читайте</STRONG> сообщения от программы в своей почте!
			|	</p>
			|</LI>";
	
	//Если Не ЭтоБазоваяВерсияКонфигурации Тогда 
	//	Итого = Итого + "
	//		| <LI>
	//		|	<p style=""margin-top: 7px; margin-bottom: 7px"">
	//		|		<STRONG>согласовывайте</STRONG> документы друг с другом 
	//		|	</p>
	//		|</LI>";
	//КонецЕсли;
	
	Итого = Итого + "
			| <LI>
			|	<p style=""margin-top: 7px; margin-bottom: 7px"">
			|		и, самое главное,&nbsp;<STRONG>формируйте</STRONG> регламентированный отчет о результатах рассмотрения обращений!
			|	</p>
			|</LI> 
			|</UL></BODY></HTML>";
			
	Обработки.ЗагрузкаКлассификатораОбращенийГраждан.ЗаполнитьТаблицыФормыДаннымиКлассификатора(ЭтаФорма);
	Константы.ПомощникНачалаРаботыЗапускался.Установить(Истина);
	
	ЭтоБазоваяВерсия = СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации();
	
	РеквизитыОргана = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Справочники.ОрганыИУчреждения.НашеУчреждение,
		"ОрганУчреждение, Наименование, ИдентификаторССТУ");
	ОрганУчреждение = РеквизитыОргана.ОрганУчреждение;
	НаименованиеУчереждения = РеквизитыОргана.Наименование;
	ИдентификаторССТУ = РеквизитыОргана.ИдентификаторССТУ;
	
	Если ОрганУчреждение = Перечисления.ОрганУчреждение.ПустаяСсылка() Тогда
		ОрганУчреждение = Перечисления.ОрганУчреждение.Орган;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы[0] Тогда
		Элементы.Назад.Доступность = Истина;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.ОрганУчереждение Тогда
		
		ОбновитьУчереждение();
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.ИнтернетПоддержка;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ИнтернетПоддержка Тогда
		
		Если НЕ ПустаяСтрока(ИнтернетПоддержкаЛогин) Тогда
			Аутентификация = Новый Структура("Логин, Пароль", ИнтернетПоддержкаЛогин, ИнтернетПоддержкаПароль);
			ОписаниеОшибки = "";
			СохранитьАутентификацию(Аутентификация, ОписаниеОшибки);
			Если НЕ ПустаяСтрока(ОписаниеОшибки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки,, "ИнтернетПоддержкаЛогин");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.РассылкаСообщений;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.РассылкаСообщений Тогда	
		
		Если ЗначениеЗаполнено(EMail) Или ЗначениеЗаполнено(Пароль) Тогда
			// Указали адрес или пароль - пробуем настроить сейчас.
			Отказ = Ложь;
			ПроверитьЗаполнениеНаСтраницеНастройкаУчетнойЗаписи(Отказ);
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
			Если Не НастроитьПочтуСервер() Тогда
				ТекстПредупреждения = НСтр("ru = 'Не удалось выполнить настроку отправки сообщений по email.
					|Настройкте подключение вручную позже в окне ""Настройка программы"".'");
				ПоказатьПредупреждение(, ТекстПредупреждения);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(EMail)
			И Не РаботаСоСтроками.ЭтоАдресЭлектроннойПочты(EMail) Тогда
			
			ТекстОшибки = НСтр("ru = 'Укажите корректный адрес электронной почты'");
			ПоказатьПредупреждение(, ТекстОшибки);
			Возврат;	
				
		КонецЕсли;
		
		// Пропускаем шаг ввода пользователей для базовой версии
		Если ЭтоБазоваяВерсия Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРазделы;
		Иначе	
			Элементы.Страницы.ТекущаяСтраница = Элементы.Пользователи;
		КонецЕсли;	
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Пользователи Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРазделы;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРазделы Тогда
		
		ЗагрузитьДанныеКлассификатора("Разделы");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТематикиИТемы;
	
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТематикиИТемы Тогда
		
		ЗагрузитьДанныеКлассификатора("ТематикиИТемы");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВопросы;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВопросы Тогда
		
		ЗагрузитьДанныеКлассификатора("Вопросы");
		Элементы.Страницы.ТекущаяСтраница = Элементы.Готово;
		Состояние(НСтр("ru = 'Устанавливаются соответствия разделов, тем, тематик и вопросов.'"));
		УстановитьСоответствияВопросов();
		
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы[Элементы.Страницы.ПодчиненныеЭлементы.Количество() - 1] Тогда
		Элементы.Далее.Видимость = Ложь;
		Элементы.Закрыть.Видимость = Истина;
	КонецЕсли;	
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция СохранитьАутентификацию(Аутентификация, ОписаниеОшибки)
	
	Если ПараметрыАутентификацииКорректные(Аутентификация, ОписаниеОшибки) Тогда
		СтандартныеПодсистемыСервер.СохранитьПараметрыАутентификацииНаСайте(Аутентификация);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции	

&НаСервереБезКонтекста
Функция ПараметрыАутентификацииКорректные(ПараметрыАутентификацииНаСайте, ОписаниеОшибки)
	
	Если ПараметрыАутентификацииНаСайте = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Билет = "";
	Попытка
		ВебСервис = ОбщегоНазначения.WSПрокси(
			"https://login.1c.ru/api/public/ticket?wsdl",
			"http://api.cas.jasig.org/",
			"TicketApiImplService",
			"TicketApiImplPort",
			ПараметрыАутентификацииНаСайте.Логин,
			ПараметрыАутентификацииНаСайте.Пароль,
			5,
			Ложь);
		
		Билет = ВебСервис.getTicket(
			ПараметрыАутентификацииНаСайте.Логин,
			ПараметрыАутентификацииНаСайте.Пароль,
			"its.1c.ru");
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		Если СтрНайти(КраткоеПредставлениеОшибки, "IncorrectLoginOrPasswordApiException") > 0 Тогда
			ОписаниеОшибки = НСтр("ru = 'Не удалось подключиться к веб-сервису сайта «1С» по причине:
									|• Некорректное имя пользователя или пароль.'");
		Иначе
			ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось подключиться к веб-сервису сайта «1С». Возможные причины:
					|• Некорректно введен или не введен логин и пароль;
					|• Нет подключения к Интернету;
					|• На веб-узле возникли неполадки;
					|• Брандмауэр или другое промежуточное ПО (антивирусы и т.п.) блокируют попытки программы подключиться к Интернету;
					|• Подключение к Интернету выполняется через прокси-сервер, но его параметры не заданы в программе.
					| Техническая информация: %1'"),
			КраткоеПредставлениеОшибки);
		КонецЕсли;
	КонецПопытки;
	
	Возврат ЗначениеЗаполнено(Билет);
	
КонецФункции

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	МожноЗакрыть = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы[Элементы.Страницы.ПодчиненныеЭлементы.Количество() - 1] Тогда
		Элементы.Далее.Видимость = Истина;
		Элементы.Закрыть.Видимость = Ложь;
	КонецЕсли;	
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Готово Тогда
		// Пропускаем шаг ввода пользователей для базовой версии
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВопросы;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаВопросы Тогда	
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТематикиИТемы;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТематикиИТемы Тогда	
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРазделы;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРазделы Тогда	
		Если ЭтоБазоваяВерсия Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.РассылкаСообщений;
		Иначе		
			Элементы.Страницы.ТекущаяСтраница = Элементы.Пользователи;
		КонецЕсли;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Пользователи Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.РассылкаСообщений;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.РассылкаСообщений Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.ИнтернетПоддержка;
		
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ИнтернетПоддержка Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.ОрганУчереждение;
	КонецЕсли;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы[0] Тогда
		Элементы.Назад.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтметки(Команда)
	
	УстановитьЗначениеОтметки(СтрЗаменить(Элементы.Страницы.ТекущаяСтраница.Имя, "Страница", ""), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметки(Команда)
	
	УстановитьЗначениеОтметки(СтрЗаменить(Элементы.Страницы.ТекущаяСтраница.Имя, "Страница", ""), Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТаблицФормы

&НаКлиенте
Процедура ТематикиИТемыВыбранПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТематикиИТемы.ТекущаяСтрока;
	ТекущаяСтрока = ?(Не ТекущаяСтрока = Неопределено,
		ТематикиИТемы.НайтиПоИдентификатору(ТекущаяСтрока),
		Неопределено);
		
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.Выбран = ?(ТекущаяСтрока.Выбран > 1, 0, ТекущаяСтрока.Выбран);
	Если ТекущаяСтрока.ПолучитьЭлементы().Количество() Тогда
		УстановитьЗначениеОтметкиДерева(ТекущаяСтрока, ТекущаяСтрока.Выбран);
		ТекущаяСтрока.ЭлементовВыбрано = ?(ТекущаяСтрока.Выбран, ТекущаяСтрока.ЭлементовНаУровне, 0);
	Иначе
		Родитель = ТекущаяСтрока.ПолучитьРодителя();
		Если Не Родитель = Неопределено Тогда
			Родитель.ЭлементовВыбрано = 
				Родитель.ЭлементовВыбрано + ?(ТекущаяСтрока.Выбран = 0, -1, ТекущаяСтрока.Выбран);
			Родитель.Выбран = 
				?(Родитель.ЭлементовНаУровне = Родитель.ЭлементовВыбрано,
					1,				
					?(Родитель.ЭлементовВыбрано > 0, 2, 0));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьУчереждение()
	
	РеквизитыОргана = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Справочники.ОрганыИУчреждения.НашеУчреждение,
		"ОрганУчреждение, Наименование, ИдентификаторССТУ");
	
	Если ЗначениеЗаполнено(НаименованиеУчереждения) 
		И (РеквизитыОргана.Наименование <> НаименованиеУчереждения
			Или РеквизитыОргана.ОрганУчреждение <> ОрганУчреждение
			Или РеквизитыОргана.ИдентификаторССТУ <> ИдентификаторССТУ) Тогда 
		УчереждениеОбъект = Справочники.ОрганыИУчреждения.НашеУчреждение.ПолучитьОбъект();
		УчереждениеОбъект.Наименование = НаименованиеУчереждения;
		УчереждениеОбъект.ОрганУчреждение = ОрганУчреждение;
		УчереждениеОбъект.ИдентификаторССТУ = ИдентификаторССТУ;
		УчереждениеОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НастроитьПочтуСервер()
	
	// Поиск настроек.
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("АдресЭлектроннойПочты", EMail);
	СтруктураПараметров.Вставить("Пароль", Пароль);
	СтруктураПараметров.Вставить("ДляОтправки", Истина);
	СтруктураПараметров.Вставить("ДляПолучения", Ложь);
	НайденныеНастройки = Справочники.УчетныеЗаписиЭлектроннойПочты.ОпределитьНастройкиУчетнойЗаписи(СтруктураПараметров);
	Если Не НайденныеНастройки.ДляОтправки Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Настройка учетной записи.
	НачатьТранзакцию();
	Попытка
		
		УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты.ПолучитьОбъект();
		
		УчетнаяЗапись.ИмяПользователя = РаботаССообщениями.ИмяУчетнойЗаписиДляРассылкиСообщений();
		УчетнаяЗапись.Наименование = EMail;
		УчетнаяЗапись.АдресЭлектроннойПочты = EMail;
		
		УчетнаяЗапись.ИспользоватьДляОтправки = Истина;
		УчетнаяЗапись.ПользовательSMTP = НайденныеНастройки.ИмяПользователяДляОтправкиПисем;
		УчетнаяЗапись.СерверИсходящейПочты = НайденныеНастройки.СерверИсходящейПочты;
		УчетнаяЗапись.ПортСервераИсходящейПочты = НайденныеНастройки.ПортСервераИсходящейПочты;
		УчетнаяЗапись.ИспользоватьЗащищенноеСоединениеДляИсходящейПочты = НайденныеНастройки.ИспользоватьЗащищенноеСоединениеДляИсходящейПочты;
		УчетнаяЗапись.ТребуетсяВходНаСерверПередОтправкой = Ложь;
		НайденныеНастройки.Свойство("ИспользоватьБезопасныйВходНаСерверИсходящейПочты", УчетнаяЗапись.ИспользоватьБезопасныйВходНаСерверИсходящейПочты);
		УчетнаяЗапись.ВремяОжидания = 30;
		
		УчетнаяЗапись.Записать();
		
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(УчетнаяЗапись.Ссылка, НайденныеНастройки.ПарольДляОтправкиПисем, "ПарольSMTP");
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при создании учетной записи электронной почты'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьЗаполнениеНаСтраницеНастройкаУчетнойЗаписи(Отказ)
	
	Если ПустаяСтрока(EMail) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите адрес электронной почты'"), , "EMail", , Отказ);
	ИначеЕсли Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(EMail, Истина) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Адрес электронной почты введен неверно'"), , "EMail", , Отказ);
	КонецЕсли;
	
	Если ПустаяСтрока(Пароль) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо ввести пароль'"), , "Пароль", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаНаСайтИнтернетПоддержкиНажатие(Элемент)
	
	ПерейтиПоНавигационнойСсылке("http://users.v8.1c.ru/");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияДокументооборотКлиент.ПередЗакрытием(
		Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не МожноЗакрыть Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеКлассификатора(ИмяТаблицыФормы)
	
	Если Не ЗагрузитьДанныеКлассификатораНаСервере(ИмяТаблицыФормы) Тогда
		ТекстПредупреждения = НСтр("ru = 'Не удалось выполнить загрузку данных классификатора обращений граждан.
			|Выполните загрузку данных классификатора позже в окне ""Настройка программы"".'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьДанныеКлассификатораНаСервере(ИмяТаблицыФормы)
	
	Результат = Истина;
	
	Менеджер = Обработки.ЗагрузкаКлассификатораОбращенийГраждан;
	Если ТипЗнч(ЭтотОбъект[ИмяТаблицыФормы]) = Тип("ДанныеФормыДерево") Тогда
		ДанныеДляЗагрузки = Обработки.ЗагрузкаКлассификатораОбращенийГраждан.ПодготовитьДанныеДереваТематикИТемКЗагрузке(ЭтаФорма);
		
		Результат = Менеджер.ЗаписатьДанныеКлассификатораВИнформационнуюБазу(
			ДанныеДляЗагрузки.Тематики,
			"Справочник.Тематики");
			
		Если Результат Тогда
			Результат = Менеджер.ЗаписатьДанныеКлассификатораВИнформационнуюБазу(
				ДанныеДляЗагрузки.Темы,
				"Справочник.Темы");
		КонецЕсли;
	Иначе
		Результат = Менеджер.ЗаписатьДанныеКлассификатораВИнформационнуюБазу(
			ЭтотОбъект[ИмяТаблицыФормы].Выгрузить(Новый Структура("Выбран", Истина)),
			"Справочник." + ИмяТаблицыФормы);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура УстановитьЗначениеОтметки(Список, Режим = Неопределено)
	
	Если Элементы[Список].Отображение = ОтображениеТаблицы.Список Тогда
		Для Каждого СтрокаСписка Из ЭтотОбъект[Список] Цикл
			СтрокаСписка.Выбран = ?(Режим = Неопределено, Не СтрокаСписка.Выбран, Режим);
		КонецЦикла;
	Иначе
		УстановитьЗначениеОтметкиДерева(ЭтотОбъект[Список], Режим);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеОтметкиДерева(Список, Режим)
	
	ТекущийУровень = Список.ПолучитьЭлементы();
	Для Каждого СтрокаСписка Из ТекущийУровень Цикл
		СтрокаСписка.Выбран = ?(Режим = Неопределено, Не СтрокаСписка.Выбран, Режим);
		Если СтрокаСписка.ПолучитьЭлементы().Количество() Тогда
			УстановитьЗначениеОтметкиДерева(СтрокаСписка, СтрокаСписка.Выбран);
			СтрокаСписка.ЭлементовВыбрано = ?(СтрокаСписка.Выбран, СтрокаСписка.ЭлементовНаУровне, 0);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСоответствияВопросов()
	
	Обработки.ЗагрузкаКлассификатораОбращенийГраждан.УстановитьСоответствияВопросов();
	
КонецПроцедуры

#КонецОбласти