#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ВыгружатьСразу Тогда
		ДатаНачала = Параметры.ДатаНачала;
		ДатаОкончания = Параметры.ДатаОкончания;
		СпособВыгрузки = Параметры.СпособВыгрузки;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СпособВыгрузки) Тогда
		СпособВыгрузки = Перечисления.СпособыВыгрузкиОбращений.ВФайл;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Параметры.ВыгружатьСразу Тогда
		Отказ = Истина;
		Выгрузить(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Выгрузить(Команда)
	
	АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
	ПараметрыВыгрузки = Новый Структура;
	ПараметрыВыгрузки.Вставить("АдресРезультата", АдресРезультата);
	ПараметрыВыгрузки.Вставить("ДатаНачала", ДатаНачала);
	ПараметрыВыгрузки.Вставить("ДатаОкончания", ДатаОкончания);
	ПараметрыВыгрузки.Вставить("СпособВыгрузки", СпособВыгрузки);
	ПараметрыВыгрузки.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
	
	НачатьВыгрузку(ПараметрыВыгрузки);
	
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если Результат.Успешно Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЗавершение",
			ЭтаФорма,
			Результат);
			
		Если СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыВыгрузкиОбращений.ВФайл") Тогда
			
			ИмяФайлаБезРасширения = СтрШаблон(
				НСтр("ru = 'Выгрузка %1 от %2'"),
				Формат(Результат.Номер, "ЧГ=0"),
				Формат(Результат.Дата, "ДФ='дд.ММ.гггг'"));
			РасширениеБезТочки = "zip";
			ИмяФайлаПоУмолчанию = ИмяФайлаБезРасширения + "." + РасширениеБезТочки;
			
			СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле("ФайлСВерсией");
			
			СведенияОФайле.ИмяБезРасширения = ИмяФайлаБезРасширения;
			СведенияОФайле.АдресВременногоХранилищаФайла = Результат.АдресФайла;
			
			СведенияОФайле.РасширениеБезТочки = РасширениеБезТочки;
			СведенияОФайле.ВремяИзменения = Результат.Дата;
			СведенияОФайле.ВремяИзмененияУниверсальное = ТекущаяДата();
			СведенияОФайле.Автор = ПользователиКлиентСервер.ТекущийПользователь();
			
			РаботаСФайламиВызовСервера.СоздатьФайлСВерсией(Результат.Документ, СведенияОФайле);
			
			ОписаниеФайла = Новый ОписаниеПередаваемогоФайла(ИмяФайлаПоУмолчанию, Результат.АдресФайла);
			ПолучаемыеФайлы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОписаниеФайла);
			ДиалогВыбораФайлов = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
			ДиалогВыбораФайлов.ПолноеИмяФайла = ИмяФайлаПоУмолчанию;
			ДиалогВыбораФайлов.Фильтр = "*.zip|*.zip";
			ДиалогВыбораФайлов.Заголовок = НСтр("ru = 'Выберите папку для сохранения файла'");
			НачатьПолучениеФайлов(ОписаниеОповещения, ПолучаемыеФайлы, ДиалогВыбораФайлов, Истина);
			
		Иначе
			
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, Результат);
			
		КонецЕсли;
		
	Иначе
		
		Если Результат.ПроблемныеОбъекты.Количество() <> 0 Тогда
			ПараметрыФормы = Новый Структура("ПроблемныеОбъекты", Результат.ПроблемныеОбъекты);
			ОткрытьФорму("Обработка.ВыгрузкаВССТУ.Форма.ПроблемныеОбъекты",
				ПараметрыФормы,,,,,,
				РежимОткрытияОкнаФормы.Независимый);
		ИначеЕсли ЗначениеЗаполнено(Результат.Сообщение) Тогда
			ПоказатьПредупреждение(, Результат.Сообщение);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Выгрузить не удалось.'"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыгрузитьЗавершение(Результат, ПараметрыВыгрузки) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		ЗафиксироватьУспешнуюВыгрузку(ПараметрыВыгрузки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗафиксироватьУспешнуюВыгрузку(Результат)
	
	УзлыВыгруженныеФайлы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		ВыгрузкаВССТУ.УзелВыгруженныеФайлы());
		
	Для Каждого ВыгруженныйФайл Из Результат.ВыгруженныеФайлы Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(УзлыВыгруженныеФайлы, ВыгруженныйФайл);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура НачатьВыгрузку(ПараметрыВыгрузки) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Успешно", Истина);
	Результат.Вставить("Сообщение", "");
	Результат.Вставить("ВыгруженныеОбращения", Новый Массив);
	Результат.Вставить("ВыгруженныеФайлы", Новый Массив);
	Результат.Вставить("ПроблемныеОбъекты", Новый Массив);
	
	Документ = Документы.ВыгрузкаВССТУ.СоздатьДокумент();
	Документ.Дата = ТекущаяДатаСеанса();
	Документ.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	ЗаполнитьЗначенияСвойств(Документ, ПараметрыВыгрузки);
	
	ПараметрыВыгрузки.Вставить("УзелВыгруженныеФайлы", ВыгрузкаВССТУ.УзелВыгруженныеФайлы());
	
	НашеУчреждение = Справочники.ОрганыИУчреждения.НашеУчреждение;
	ИдентификаторОргана = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НашеУчреждение, "ИдентификаторССТУ");
	
	Если Не ЗначениеЗаполнено(ИдентификаторОргана) Тогда
		Результат.Успешно = Ложь;
		Результат.Сообщение = НСтр(
			"ru = 'Не заполнен идентификатор органа (учреждения).
			|Заполнить его можно по команде ""Настройка и обслуживание"" - ""Наше учреждение""'");
		ПоместитьВоВременноеХранилище(Результат, ПараметрыВыгрузки.АдресРезультата);
		Возврат;
	КонецЕсли;
		
	ПараметрыВыгрузки.Вставить("ИдентификаторОргана", ИдентификаторОргана);
	
	Если ПараметрыВыгрузки.СпособВыгрузки = Перечисления.СпособыВыгрузкиОбращений.ВФайл Тогда
		ИмяZipФайла = ПолучитьИмяВременногоФайла("zip");
		ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяZipФайла);
	Иначе
		// todo http
	КонецЕсли;
	
	ФайлыJSONКУдалению = Новый Массив;
	
	Обращения = Справочники.Обращения.ОбращенияЗаПериод(ПараметрыВыгрузки.ДатаНачала,
		ПараметрыВыгрузки.ДатаОкончания);
	
	Для Каждого Обращение Из Обращения Цикл
		
		РезультатЗаписиJSON = ЗаписатьОбращениеВJSON(Обращение, ПараметрыВыгрузки);
		Если РезультатЗаписиJSON.Успешно Тогда
			Если ПараметрыВыгрузки.СпособВыгрузки = Перечисления.СпособыВыгрузкиОбращений.ВФайл Тогда
				ЗаписьZipФайла.Добавить(РезультатЗаписиJSON.ИмяФайла);
				ФайлыJSONКУдалению.Добавить(РезультатЗаписиJSON.ИмяФайла);
			Иначе
				// todo http
			КонецЕсли;
			Результат.ВыгруженныеОбращения.Добавить(Обращение);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат.ВыгруженныеФайлы,
				РезультатЗаписиJSON.ВыгруженныеФайлы);
			СтрокаДокумента = Документ.Обращения.Добавить();
			СтрокаДокумента.Обращение = Обращение;
		Иначе
			Результат.Успешно = Ложь;
			Результат.Сообщение = РезультатЗаписиJSON.Сообщение;
			Если ЗначениеЗаполнено(РезультатЗаписиJSON.ПроблемныйОбъект) Тогда
				ПроблемныйОбъект = Новый Структура;
				ПроблемныйОбъект.Вставить("Объект", РезультатЗаписиJSON.ПроблемныйОбъект);
				ПроблемныйОбъект.Вставить("Сообщение", РезультатЗаписиJSON.СообщениеПроблемногоОбъекта);
				Результат.ПроблемныеОбъекты.Добавить(ПроблемныйОбъект);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Результат.Успешно Тогда
		Документ.УстановитьНовыйНомер();
		Документ.Записать(РежимЗаписиДокумента.Запись);
		Результат.Вставить("Документ", Документ.Ссылка);
		Результат.Вставить("Дата", Документ.Дата);
		Результат.Вставить("Номер", Документ.Номер);
		Если ПараметрыВыгрузки.СпособВыгрузки = Перечисления.СпособыВыгрузкиОбращений.ВФайл Тогда
			ЗаписьZipФайла.Записать();
			ДвоичныеДанные = Новый ДвоичныеДанные(ИмяZipФайла);
			АдресФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные,
				ПараметрыВыгрузки.ИдентификаторФормы);
			Результат.Вставить("АдресФайла", АдресФайла);
			Результат.Вставить("ИмяФайла", ИмяZipФайла);
		Иначе
			// todo http
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ФайлJSONКУдалению Из ФайлыJSONКУдалению Цикл
		УдалитьФайлы(ФайлJSONКУдалению);
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Результат, ПараметрыВыгрузки.АдресРезультата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаписатьОбращениеВJSON(Обращение, ПараметрыВыгрузки) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Успешно", Истина);
	Результат.Вставить("Сообщение", "");
	Результат.Вставить("ИмяФайла", ПолучитьИмяВременногоФайла("json"));
	Результат.Вставить("ВыгруженныеФайлы", Новый Массив);
	Результат.Вставить("ПроблемныйОбъект", Неопределено);
	Результат.Вставить("СообщениеПроблемногоОбъекта", "");
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.ОткрытьФайл(Результат.ИмяФайла);
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Обращение,
		"ДатаДокумента, ДатаПоОбращению, ДатаПоступления, СрокРассмотрения, СрокРассмотренияПервоначальный,
		|Заявитель, Заявитель.ПочтовыйАдрес, Заявитель.АдресЭлектроннойПочты,НомерДокумента,
		|Вопросы, Источник");
	
	Вопросы = Реквизиты.Вопросы.Выгрузить();
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	
	ЗаписьJSON.ЗаписатьИмяСвойства("departmentId");
	ЗаписьJSON.ЗаписатьЗначение(ПараметрыВыгрузки.ИдентификаторОргана);
	
	ЗаписьJSON.ЗаписатьИмяСвойства("isDirect");
	// Если обращение не направлено из иного органа, то значит обращение поступило напрямую непосредственно от заявителя
	Если ЗначениеЗаполнено(Реквизиты.Источник) Тогда 
		ЗаписьJSON.ЗаписатьЗначение(Ложь);
	Иначе 
		ЗаписьJSON.ЗаписатьЗначение(Истина);
	КонецЕсли;
	
	ЗаписьJSON.ЗаписатьИмяСвойства("format");
	ЗаписьJSON.ЗаписатьЗначение("Other");
	
	ЗаписьJSON.ЗаписатьИмяСвойства("number");
	ЗаписьJSON.ЗаписатьЗначение(Реквизиты.НомерДокумента);
	
	ЗаписьJSON.ЗаписатьИмяСвойства("createDate");
	ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаПоступления, "ДФ=гггг-ММ-дд"));
	
	ЗаписьJSON.ЗаписатьИмяСвойства("name");
	ЗаписьJSON.ЗаписатьЗначение(Строка(Реквизиты.Заявитель));
	
	ЗаписьJSON.ЗаписатьИмяСвойства("address");
	ЗаписьJSON.ЗаписатьЗначение(Строка(Реквизиты.ЗаявительПочтовыйАдрес));
	
	ЗаписьJSON.ЗаписатьИмяСвойства("Email");
	ЗаписьJSON.ЗаписатьЗначение(Строка(Реквизиты.ЗаявительАдресЭлектроннойПочты));
	
	ЗаписьJSON.ЗаписатьИмяСвойства("questions");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	
	РезультатыСФайлами = Новый Массив;
	РезультатыСФайлами.Добавить(Перечисления.РезультатыРассмотрения.Поддержано);
	РезультатыСФайлами.Добавить(Перечисления.РезультатыРассмотрения.ВТомЧислеМерыПриняты);
	РезультатыСФайлами.Добавить(Перечисления.РезультатыРассмотрения.Разъяснено);
	РезультатыСФайлами.Добавить(Перечисления.РезультатыРассмотрения.НеПоддержано);
	
	Для Каждого Вопрос Из Вопросы Цикл
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("code");
		КодРазделаСтрокой = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Вопрос.Раздел, "Код");
		КодТематикиСтрокой = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Вопрос.Тематика, "Код");
		КодТемыСтрокой = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Вопрос.Тема, "Код");
		КодВопросаСтрокой = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Вопрос.Вопрос, "Код");
		ПолныйКодВопроса = СтрШаблон("%1.%2.%3.%4",
			?(ЗначениеЗаполнено(КодРазделаСтрокой), КодРазделаСтрокой, "0000"),
			?(ЗначениеЗаполнено(КодТематикиСтрокой), КодТематикиСтрокой, "0000"),
			?(ЗначениеЗаполнено(КодТемыСтрокой), КодТемыСтрокой, "0000"),
			?(ЗначениеЗаполнено(КодВопросаСтрокой), КодВопросаСтрокой, "0000"));
		ЗаписьJSON.ЗаписатьЗначение(ПолныйКодВопроса);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("status");
		
		Если Вопрос.РезультатРассмотрения = 
			Перечисления.РезультатыРассмотрения.Поддержано Тогда
			
			ЗаписьJSON.ЗаписатьЗначение("Supported");
			
			ЗаписьJSON.ЗаписатьИмяСвойства("incomingDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаПоступления, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("registrationDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаДокумента, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("actionsTaken");
			ЗаписьJSON.ЗаписатьЗначение(Ложь);
			ЗаписьJSON.ЗаписатьИмяСвойства("responseDate"); // todo
			ЗаписьJSON.ЗаписатьЗначение(Формат(Вопрос.ДатаОтвета, "ДФ=гггг-ММ-дд"));
			
		ИначеЕсли Вопрос.РезультатРассмотрения = 
			Перечисления.РезультатыРассмотрения.ВТомЧислеМерыПриняты Тогда
			
			ЗаписьJSON.ЗаписатьЗначение("Supported");
			
			ЗаписьJSON.ЗаписатьИмяСвойства("incomingDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаПоступления, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("registrationDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаДокумента, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("actionsTaken");
			ЗаписьJSON.ЗаписатьЗначение(Истина);
			ЗаписьJSON.ЗаписатьИмяСвойства("responseDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Вопрос.ДатаОтвета, "ДФ=гггг-ММ-дд"));
			
		ИначеЕсли Вопрос.РезультатРассмотрения = 
			Перечисления.РезультатыРассмотрения.Разъяснено Тогда
			
			ЗаписьJSON.ЗаписатьЗначение("Explained");
			
			ЗаписьJSON.ЗаписатьИмяСвойства("incomingDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаПоступления, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("registrationDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаДокумента, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("responseDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Вопрос.ДатаОтвета, "ДФ=гггг-ММ-дд"));
			
		ИначеЕсли Вопрос.РезультатРассмотрения = 
			Перечисления.РезультатыРассмотрения.НеПоддержано Тогда
			
			ЗаписьJSON.ЗаписатьЗначение("NotSupported");
			
			ЗаписьJSON.ЗаписатьИмяСвойства("incomingDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаПоступления, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("registrationDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаДокумента, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("responseDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Вопрос.ДатаОтвета, "ДФ=гггг-ММ-дд"));
			
		ИначеЕсли Вопрос.РезультатРассмотрения = 
			Перечисления.РезультатыРассмотрения.ОставленоБезОтвета Тогда
			
			ЗаписьJSON.ЗаписатьЗначение("LeftWithoutAnswer");
			ЗаписьJSON.ЗаписатьИмяСвойства("incomingDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаПоступления, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("registrationDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаДокумента, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("responseDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Вопрос.ДатаОтвета, "ДФ=гггг-ММ-дд"));
			
		ИначеЕсли Не ЗначениеЗаполнено(Вопрос.РезультатРассмотрения) Тогда
			
			Если ЗначениеЗаполнено(Реквизиты.СрокРассмотренияПервоначальный) 
				И ЗначениеЗаполнено(Реквизиты.СрокРассмотрения) 
				И Реквизиты.СрокРассмотрения > Реквизиты.СрокРассмотренияПервоначальный Тогда 
				ЗаписьJSON.ЗаписатьЗначение("InWorkExtended ");
			Иначе 
				ЗаписьJSON.ЗаписатьЗначение("InWork");
			КонецЕсли;
			
			ЗаписьJSON.ЗаписатьИмяСвойства("incomingDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаПоступления, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("registrationDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаДокумента, "ДФ=гггг-ММ-дд"));
			
		ИначеЕсли Вопрос.РезультатРассмотрения = 
			Перечисления.РезультатыРассмотрения.НаправленоВИнойОрган Тогда
			
			ЗаписьJSON.ЗаписатьЗначение("Transferred");
			ЗаписьJSON.ЗаписатьИмяСвойства("incomingDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаПоступления, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("registrationDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Реквизиты.ДатаДокумента, "ДФ=гггг-ММ-дд"));
			
			ЗаписьJSON.ЗаписатьИмяСвойства("transfer");
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			
			ЗаписьJSON.ЗаписатьИмяСвойства("departmentId");
			ИдентификаторОргана = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Вопрос.ОрганДляПередачи,
				"ИдентификаторССТУ");
			
			Если Не ЗначениеЗаполнено(ИдентификаторОргана) Тогда 
				Результат.Успешно = Ложь;
				Результат.Сообщение = НСтр("ru = 'Не заполнен идентификатор органа (учреждения), в который перенаправлено обращение.'");
				Результат.ПроблемныйОбъект = Вопрос.ОрганДляПередачи;
				Результат.СообщениеПроблемногоОбъекта = Результат.Сообщение;
				
			КонецЕсли;
			
			ЗаписьJSON.ЗаписатьЗначение(ИдентификаторОргана);
			ЗаписьJSON.ЗаписатьИмяСвойства("transferDate");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Вопрос.ИсходящаяДатаДокумента, "ДФ=гггг-ММ-дд"));
			ЗаписьJSON.ЗаписатьИмяСвойства("transferNumber");
			ЗаписьJSON.ЗаписатьЗначение(Вопрос.ИсходящийНомерДокумента);
			
			ЗаписьJSON.ЗаписатьКонецОбъекта();
			
		Иначе
			
			ЗаписьJSON.ЗаписатьЗначение("NotReceived");
			
		КонецЕсли;
		
		Если РезультатыСФайлами.Найти(Вопрос.РезультатРассмотрения) <> Неопределено Тогда
			РезультатЗаписиФайла = ЗаписатьФайл(ЗаписьJSON, Обращение, ПараметрыВыгрузки);
			Если РезультатЗаписиФайла.Успешно Тогда
				Если РезультатЗаписиФайла.Файл <> Неопределено Тогда
					Результат.ВыгруженныеФайлы.Добавить(РезультатЗаписиФайла.Файл);
				КонецЕсли;
			Иначе
				Результат.Успешно = Ложь;
				Результат.Сообщение = РезультатЗаписиФайла.Сообщение;
				Результат.ПроблемныйОбъект = РезультатЗаписиФайла.ПроблемныйОбъект;
				Результат.СообщениеПроблемногоОбъекта = РезультатЗаписиФайла.СообщениеПроблемногоОбъекта;
			КонецЕсли;
		КонецЕсли;
		
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
	КонецЦикла;
	
	ЗаписьJSON.ЗаписатьКонецМассива();
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	ЗаписьJSON.Закрыть();
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаписатьФайл(ЗаписьJSON, Обращение, ПараметрыВыгрузки)
	
	Результат = Новый Структура;
	Результат.Вставить("Успешно", Истина);
	Результат.Вставить("Сообщение", "");
	Результат.Вставить("ПроблемныйОбъект", Неопределено);
	Результат.Вставить("СообщениеПроблемногоОбъекта", "");
	Результат.Вставить("Файл", Неопределено);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Файлы.Ссылка КАК Ссылка,
		|	Файлы.ПолноеНаименование КАК ПолноеНаименование,
		|	Файлы.ТекущаяВерсияРасширение КАК ТекущаяВерсияРасширение
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.ВладелецФайла = &Обращение
		|	И НЕ Файлы.ПометкаУдаления");
	Запрос.УстановитьПараметр("Обращение", Обращение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Результат.Вставить("Файл", Выборка.Ссылка);
		
		ЗаписьJSON.ЗаписатьИмяСвойства("attachment");
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		
		ЗаписьJSON.ЗаписатьИмяСвойства("name");
		ЗаписьJSON.ЗаписатьЗначение(СтрШаблон("%1.%2",
			Выборка.ПолноеНаименование,
			Выборка.ТекущаяВерсияРасширение));
		
		ЗаписьJSON.ЗаписатьИмяСвойства("content");
		ДвоичныеДанные = РаботаСФайламиВызовСервера.ПолучитьДвоичныеДанныеФайла(Выборка.Ссылка);
		ЗаписьJSON.ЗаписатьЗначение(Base64Строка(ДвоичныеДанные));
		
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		Возврат Результат;
		
	КонецЦикла;
	
	Если Выборка.Количество() = 0 Тогда
		Результат.Успешно = Ложь;
		Результат.ПроблемныйОбъект = Обращение;
		Результат.СообщениеПроблемногоОбъекта = НСтр("ru = 'Нет файлов'");
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

#КонецОбласти