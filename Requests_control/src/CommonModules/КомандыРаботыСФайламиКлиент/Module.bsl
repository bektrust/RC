// Блокирует файл для редактирования и открывает его
Процедура Редактировать(ОбъектСсылка, УникальныйИдентификатор = Неопределено, РабочийКаталогВладельца = Неопределено) Экспорт
	
	Перем ДанныеФайла;
	
	Если ОбъектСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("ОбработчикРезультата", Неопределено);
	ПараметрыВыполнения.Вставить("ОбъектСсылка", ОбъектСсылка);
	Обработчик = Новый ОписаниеОповещения("РедактироватьСОповещениемЗавершение", ЭтотОбъект, ПараметрыВыполнения);
	РаботаСФайламиКлиент.РедактироватьФайлПоСсылке(Обработчик, ОбъектСсылка, УникальныйИдентификатор, РабочийКаталогВладельца);
	
КонецПроцедуры

// Продолжение процедуры (см. выше).
Процедура РедактироватьСОповещениемЗавершение(ФайлОтредактирован, ПараметрыВыполнения) Экспорт
	
	Если ФайлОтредактирован Тогда
		
		ОповеститьОбИзменении(ПараметрыВыполнения.ОбъектСсылка);
		
		Оповестить("Запись_Файл", 
			Новый Структура("Событие, Файл, Владелец, ЕстьЗанятыеФайлы", 
			"ДанныеФайлаИзменены",
			ПараметрыВыполнения.ОбъектСсылка, 
			ПараметрыВыполнения.ДанныеФайла.Владелец, 
			ПараметрыВыполнения.ДанныеФайла.ЕстьЗанятыеФайлы), 
			ПараметрыВыполнения.ОбъектСсылка);
			
		Оповестить("Запись_Файл", 
			Новый Структура("Событие, Файл, Владелец, ЕстьЗанятыеФайлы", 
			"ФайлРедактировался",
			ПараметрыВыполнения.ОбъектСсылка, 
			ПараметрыВыполнения.ДанныеФайла.Владелец, 
			ПараметрыВыполнения.ДанныеФайла.ЕстьЗанятыеФайлы), 
			ПараметрыВыполнения.ОбъектСсылка);
			
	КонецЕсли;
	
	РаботаСФайламиКлиент.ВернутьРезультат(ПараметрыВыполнения.ОбработчикРезультата, Неопределено);
	
КонецПроцедуры

// Открывает файл для просмотра
//
// Параметры:
//  ДанныеФайла - Структура - структура с данными файла.
//
Процедура Открыть(ДанныеФайла, УникальныйИдентификатор = Неопределено) Экспорт
	
	РаботаСФайламиКлиент.Открыть(ДанныеФайла, УникальныйИдентификатор);
	
КонецПроцедуры

// Печатает файлы на принтер посредством ассоциированного приложения
//
// Параметры
//  ДанныеФайлов - Массив - массив структур с данными файлов
//  УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор формы
//
Процедура НапечататьФайлы(ДанныеФайлов, УникальныйИдентификатор = Неопределено) Экспорт
	
	РаботаСФайламиКлиент.НапечататьФайлы(ДанныеФайлов, УникальныйИдентификатор);
	
КонецПроцедуры

// Печатает файл на принтер посредством ассоциированного приложения
//
// Параметры
//  ДанныеФайлов - Структура - структура с данными файла
//  УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор формы
//
Процедура НапечататьФайл(ДанныеФайла, УникальныйИдентификатор = Неопределено) Экспорт
	
	ДанныеФайлов = Новый Массив;
	ДанныеФайлов.Добавить(ДанныеФайла);
	
	РаботаСФайламиКлиент.НапечататьФайлы(ДанныеФайлов, УникальныйИдентификатор);
	
КонецПроцедуры

// Открывает каталог на локальном компьютере в котором размещен этот файл
Процедура ОткрытьКаталогФайла(ДанныеФайла) Экспорт
	
	РаботаСФайламиКлиент.КаталогФайла(Неопределено, ДанныеФайла);
	
КонецПроцедуры

// Сохраняет текущую версию файла в выбранный каталог на жестком или сетевом диске
Процедура СохранитьКак(ДанныеФайла, УникальныйИдентификатор = Неопределено) Экспорт
	
	РаботаСФайламиКлиент.СохранитьКак(Неопределено, ДанныеФайла, УникальныйИдентификатор);
	
КонецПроцедуры
