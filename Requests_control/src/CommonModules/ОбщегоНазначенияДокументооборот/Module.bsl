#Область ПрограммныйИнтерфейс

// Возвращает Истину, если клиентское приложение является веб клиентом,
// иначе Ложь.
//
Функция ПриложениеЯвляетсяВебКлиентом() Экспорт
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	Возврат ЗначениеЗаполнено(СистемнаяИнформация.ИнформацияПрограммыПросмотра);
	
КонецФункции

// Возвращает структуру, содержащую значения реквизитов прочитанные из информационной базы
// по ссылке на объект. Выполняется в привилегированном режиме.
// 
Функция ЗначенияРеквизитовОбъектаВПривилегированномРежиме(Ссылка, Реквизиты) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты);
	
КонецФункции

// Возвращает значение реквизита, прочитанного из информационной базы по ссылке на объект.
// Выполняется в привилегированном режиме.
//
Функция ЗначениеРеквизитаОбъектаВПривилегированномРежиме(Ссылка, ИмяРеквизита) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
КонецФункции 

// Возвращает структуру, содержащую значения реквизитов, прочитанные из информационной базы
// для нескольких объектов. Выполняется в привилегированном режиме.
// 
Функция ЗначенияРеквизитовОбъектовВПривилегированномРежиме(МассивСсылок, ИменаРеквизитов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивСсылок, ИменаРеквизитов);
	
КонецФункции

// Возвращает значения реквизита, прочитанного из информационной базы для нескольких объектов.
// Выполняется в привилегированном режиме.
//
Функция ЗначениеРеквизитаОбъектовВПривилегированномРежиме(МассивСсылок, ИмяРеквизита) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита);
	
КонецФункции

// Устаналивает стандартные цвета диаграмм отчета.
//
// Параметры:
//   ДокументРезультат - ТабличныйДокумент - оформляемый результат отчета.
//
Процедура УстановитьЦветаДиаграмм(ДокументРезультат) Экспорт
	
	Для Каждого Рисунок из ДокументРезультат.Рисунки Цикл
		Если Рисунок.ТипРисунка = ТипРисункаТабличногоДокумента.Диаграмма Тогда
			УстановитьЦветаДиаграммы(Рисунок.Объект);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Устаналивает стандартные цвета диаграммы отчета.
//
// Параметры:
//   Диаграмма - Диаграмма - оформляемая диаграмма.
//
Процедура УстановитьЦветаДиаграммы(Диаграмма) 
	
	Если Диаграмма.ТипДиаграммы = ТипДиаграммы.Гистограмма
		Или Диаграмма.ТипДиаграммы = ТипДиаграммы.ГистограммаГоризонтальная
		Или Диаграмма.ТипДиаграммы = ТипДиаграммы.ГистограммаСНакоплением
		Или Диаграмма.ТипДиаграммы = ТипДиаграммы.ГистограммаСНакоплениемГоризонтальная Тогда
		
		НомерОбласти = 0; 
		КоличествоСерий = Диаграмма.Серии.Количество();
		Для Каждого Серия из Диаграмма.Серии Цикл
			Если КоличествоСерий <= 4 Тогда
				Серия.Цвет = ОттенокЦвета(НомерОбласти, 5, 1); // начиная со светло-синего
			Иначе
				Серия.Цвет = КонтрастныйЦвет(НомерОбласти, 5, 1); // начиная со светло-синего
			КонецЕсли;
			НомерОбласти = НомерОбласти + 1;
		КонецЦикла;
		
	ИначеЕсли Диаграмма.ТипДиаграммы = ТипДиаграммы.График
		Или Диаграмма.ТипДиаграммы = ТипДиаграммы.ГрафикПоШагам
		Или Диаграмма.ТипДиаграммы = ТипДиаграммы.ГрафикСОбластями Тогда
		
		НомерОбласти = 0;
		Для Каждого Серия из Диаграмма.Серии Цикл
			Серия.Цвет = ЦветОттенка(НомерОбласти, 5, 5); // начиная с темно-синего
			НомерОбласти = НомерОбласти + 1;
		КонецЦикла;
		
	ИначеЕсли Диаграмма.ТипДиаграммы = ТипДиаграммы.Круговая Тогда
		
		НомерОбласти = 0;
		Для Каждого Серия из Диаграмма.Серии Цикл
			Серия.Цвет = КонтрастныйЦвет(НомерОбласти, 5, 1); // начиная со светло-синего
			НомерОбласти = НомерОбласти + 1;
		КонецЦикла;
		
	ИначеЕсли Диаграмма.ТипДиаграммы = ТипДиаграммы.ГистограммаОбъемная Тогда
		
		НомерОбласти = 0;
		Для Каждого Точка из Диаграмма.Точки Цикл
			Точка.Цвет = КонтрастныйЦвет(НомерОбласти, 5, 1); // начиная со светло-синего
			Точка.ПриоритетЦвета = Истина;
			НомерОбласти = НомерОбласти + 1;
		КонецЦикла;
		
	Иначе
		
		НомерОбласти = 0;
		Для Каждого Серия из Диаграмма.Серии Цикл
			Серия.Цвет = ОттенокЦвета(НомерОбласти, 5, 1); // начиная со светло-синего
			НомерОбласти = НомерОбласти + 1;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает цвет для указанной области диаграммы, подходящий для диаграмм с большим количеством
// областей. Чередует цвета и избегает слишком светлых цветов.
//
// Параметры:
//   НомерОбласти - Число - номер области (серии, точки) диаграммы.
//   БазовыйЦвет - Число - цвет палитры для области с номером 0.
//   БазовыйОттенок - Число - оттенок палитры для области с номером 0.
//
// Возвращаемое значение:
//   Цвет - цвет из палитры для указанной области.
//
Функция КонтрастныйЦвет(НомерОбласти, БазовыйЦвет, БазовыйОттенок)
	
	Позиция = БазовыйЦвет * 8 + БазовыйОттенок + НомерОбласти * 21;
	НомерЦвета = Цел(Позиция / 8) % 8;
	НомерОттенка = Позиция % 8;
	Если НомерОттенка = 3 И НомерЦвета = 3 Тогда
		НомерЦвета = НомерЦвета - 1;
	ИначеЕсли НомерОттенка = 3 И НомерЦвета = 7 Тогда
		НомерЦвета = НомерЦвета - 1;
	КонецЕсли;

	Возврат ЦветПалитры(НомерЦвета, НомерОттенка);
	
КонецФункции

// Возвращает цвет для указанной области диаграммы, подходящий для диаграмм с небольшим (2-4)
// количеством областей. Дает оттенки одного цвета и избегает слишком светлых цветов.
//
// Параметры:
//   НомерОбласти - Число - номер области (серии, точки) диаграммы.
//   БазовыйЦвет - Число - цвет палитры для области с номером 0.
//   БазовыйОттенок - Число - оттенок палитры для области с номером 0.
//
// Возвращаемое значение:
//   Цвет - цвет из палитры для указанной области.
//
Функция ОттенокЦвета(НомерОбласти, БазовыйЦвет, БазовыйОттенок)
	
	НомерОттенка = (БазовыйОттенок + 5 * НомерОбласти) % 8;
	Если (НомерОттенка = 3 И БазовыйЦвет = 3)
		Или (НомерОттенка = 3 И БазовыйЦвет = 7) Тогда
		НомерЦвета = БазовыйЦвет - 1;
	Иначе
		НомерЦвета = БазовыйЦвет;
	КонецЕсли;
	
	Возврат ЦветПалитры(НомерЦвета, НомерОттенка);
	
КонецФункции

// Возвращает цвет для указанной области диаграммы, подходящий для графиков с небольшим (2-4)
// количеством серий. Чередует цвета одного оттенка (светлоты). Не избегает светлых цветов.
//
// Параметры:
//   НомерОбласти - Число - номер области (серии, точки) диаграммы.
//   БазовыйЦвет - Число - цвет палитры для области с номером 0.
//   БазовыйОттенок - Число - оттенок палитры для области с номером 0.
//
// Возвращаемое значение:
//   Цвет - цвет из палитры для указанной области.
//
Функция ЦветОттенка(НомерОбласти, БазовыйЦвет, БазовыйОттенок)
	
	НомерЦвета = (БазовыйЦвет + 5 * НомерОбласти) % 8;
	
	Возврат ЦветПалитры(НомерЦвета, БазовыйОттенок);
	
КонецФункции

// Возвращает цвет из стандартной палитры по номеру цвета и номеру оттенка.
//
// Параметры:
//   НомерЦвета - Число - 0...7, номер цвета.
//   НомерОттенка - Число - 0...7, номер оттенка указанного цвета.
//     Оттенки светлеют от 0 (средний) до 3 (самый светлый) и
//     темнеют до 7 (самый темный).
//
// Возвращаемое значение:
//   Цвет - цвет палитры.
//
Функция ЦветПалитры(НомерЦвета, НомерОттенка)
	
	Если НомерЦвета = 0 Тогда // красный и бордо
		Если НомерОттенка = 0 Тогда Возврат Новый Цвет(229,85,85);
		ИначеЕсли НомерОттенка = 1 Тогда Возврат Новый Цвет(234,119,119);
		ИначеЕсли НомерОттенка = 2 Тогда Возврат Новый Цвет(239,153,153);
		ИначеЕсли НомерОттенка = 3 Тогда Возврат Новый Цвет(245,187,187);
		ИначеЕсли НомерОттенка = 4 Тогда Возврат Новый Цвет(207,77,91);
		ИначеЕсли НомерОттенка = 5 Тогда Возврат Новый Цвет(167,69,81);
		ИначеЕсли НомерОттенка = 6 Тогда Возврат Новый Цвет(130,65,73);
		ИначеЕсли НомерОттенка = 7 Тогда Возврат Новый Цвет(117,70,59);
		КонецЕсли;
		
	ИначеЕсли НомерЦвета = 1 Тогда // оранжевый и коричневый
		Если НомерОттенка = 0 Тогда Возврат Новый Цвет(239,116,78);
		ИначеЕсли НомерОттенка = 1 Тогда Возврат Новый Цвет(242,144,113);
		ИначеЕсли НомерОттенка = 2 Тогда Возврат Новый Цвет(245,172,149);
		ИначеЕсли НомерОттенка = 3 Тогда Возврат Новый Цвет(249,199,184);
		ИначеЕсли НомерОттенка = 4 Тогда Возврат Новый Цвет(228,119,56);
		ИначеЕсли НомерОттенка = 5 Тогда Возврат Новый Цвет(176,104,62);
		ИначеЕсли НомерОттенка = 6 Тогда Возврат Новый Цвет(136,86,59);
		ИначеЕсли НомерОттенка = 7 Тогда Возврат Новый Цвет(123,99,55);
		Иначе
		КонецЕсли;
		
	ИначеЕсли НомерЦвета = 2 Тогда // желтый и хаки
		Если НомерОттенка = 0 Тогда Возврат Новый Цвет(251, 221, 100);
		ИначеЕсли НомерОттенка = 1 Тогда Возврат Новый Цвет(252,228,131);
		ИначеЕсли НомерОттенка = 2 Тогда Возврат Новый Цвет(253,235,162);
		ИначеЕсли НомерОттенка = 3 Тогда Возврат Новый Цвет(253,241,193);
		ИначеЕсли НомерОттенка = 4 Тогда Возврат Новый Цвет(237,203,74);
		ИначеЕсли НомерОттенка = 5 Тогда Возврат Новый Цвет(189,163,67);
		ИначеЕсли НомерОттенка = 6 Тогда Возврат Новый Цвет(143,125,63);
		ИначеЕсли НомерОттенка = 7 Тогда Возврат Новый Цвет(122,128,58);
		Иначе
		КонецЕсли;
		
	ИначеЕсли НомерЦвета = 3 Тогда // зеленый
		Если НомерОттенка = 0 Тогда Возврат Новый Цвет(171,221,185);
		ИначеЕсли НомерОттенка = 1 Тогда Возврат Новый Цвет(188,228,199);
		ИначеЕсли НомерОттенка = 2 Тогда Возврат Новый Цвет(205,235,213);
		ИначеЕсли НомерОттенка = 3 Тогда Возврат Новый Цвет(221,241,227);
		ИначеЕсли НомерОттенка = 4 Тогда Возврат Новый Цвет(148,194,161);
		ИначеЕсли НомерОттенка = 5 Тогда Возврат Новый Цвет(123,157,133);
		ИначеЕсли НомерОттенка = 6 Тогда Возврат Новый Цвет(99,121,106);
		ИначеЕсли НомерОттенка = 7 Тогда Возврат Новый Цвет(90,111,103);
		Иначе
		КонецЕсли;
		
	ИначеЕсли НомерЦвета = 4 Тогда // голубой и циан
		Если НомерОттенка = 0 Тогда Возврат Новый Цвет(104,187,219);
		ИначеЕсли НомерОттенка = 1 Тогда Возврат Новый Цвет(134,201,226);
		ИначеЕсли НомерОттенка = 2 Тогда Возврат Новый Цвет(164,214,233);
		ИначеЕсли НомерОттенка = 3 Тогда Возврат Новый Цвет(195,228,241);
		ИначеЕсли НомерОттенка = 4 Тогда Возврат Новый Цвет(93,164,197);
		ИначеЕсли НомерОттенка = 5 Тогда Возврат Новый Цвет(81,135,159);
		ИначеЕсли НомерОттенка = 6 Тогда Возврат Новый Цвет(73,108,124);
		ИначеЕсли НомерОттенка = 7 Тогда Возврат Новый Цвет(66,84,112);
		Иначе
		КонецЕсли;
		
	ИначеЕсли НомерЦвета = 5 Тогда // синий
		Если НомерОттенка = 0 Тогда Возврат Новый Цвет(136,160,210);
		ИначеЕсли НомерОттенка = 1 Тогда Возврат Новый Цвет(160,179,219);
		ИначеЕсли НомерОттенка = 2 Тогда Возврат Новый Цвет(184,198,228);
		ИначеЕсли НомерОттенка = 3 Тогда Возврат Новый Цвет(207,217,237);
		ИначеЕсли НомерОттенка = 4 Тогда Возврат Новый Цвет(119,138,187);
		ИначеЕсли НомерОттенка = 5 Тогда Возврат Новый Цвет(102,117,152);
		ИначеЕсли НомерОттенка = 6 Тогда Возврат Новый Цвет(86,96,119);
		ИначеЕсли НомерОттенка = 7 Тогда Возврат Новый Цвет(79,80,108);
		Иначе
		КонецЕсли;
		
	ИначеЕсли НомерЦвета = 6 Тогда // фиолетовый
		Если НомерОттенка = 0 Тогда Возврат Новый Цвет(149,133,244);
		ИначеЕсли НомерОттенка = 1 Тогда Возврат Новый Цвет(170,157,246);
		ИначеЕсли НомерОттенка = 2 Тогда Возврат Новый Цвет(191,182,248);
		ИначеЕсли НомерОттенка = 3 Тогда Возврат Новый Цвет(213,206,251);
		ИначеЕсли НомерОттенка = 4 Тогда Возврат Новый Цвет(132,115,215);
		ИначеЕсли НомерОттенка = 5 Тогда Возврат Новый Цвет(111,98,173);
		ИначеЕсли НомерОттенка = 6 Тогда Возврат Новый Цвет(92,83,133);
		ИначеЕсли НомерОттенка = 7 Тогда Возврат Новый Цвет(98,76,121);
		Иначе
		КонецЕсли;
		
	ИначеЕсли НомерЦвета = 7 Тогда // розовый и маджента
		Если НомерОттенка = 0 Тогда Возврат Новый Цвет(210,170,226);
		ИначеЕсли НомерОттенка = 1 Тогда Возврат Новый Цвет(219,187,232);
		ИначеЕсли НомерОттенка = 2 Тогда Возврат Новый Цвет(228,204,238);
		ИначеЕсли НомерОттенка = 3 Тогда Возврат Новый Цвет(237,221,243);
		ИначеЕсли НомерОттенка = 4 Тогда Возврат Новый Цвет(185,146,197);
		ИначеЕсли НомерОттенка = 5 Тогда Возврат Новый Цвет(150,122,160);
		ИначеЕсли НомерОттенка = 6 Тогда Возврат Новый Цвет(118,99,123);
		ИначеЕсли НомерОттенка = 7 Тогда Возврат Новый Цвет(111,90,108);
		КонецЕсли;
			
	КонецЕсли;
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Недопустимый цвет палитры: (%1, %2)'"),
		НомерЦвета,
		НомерОттенка);
		
	ВызватьИсключение ТекстСообщения;
	
КонецФункции

#КонецОбласти